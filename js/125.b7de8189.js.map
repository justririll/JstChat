{"version":3,"file":"js/125.b7de8189.js","mappings":"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","sources":["webpack://chat/./src/views/chat.vue","webpack://chat/./src/components/ChatMessage.vue","webpack://chat/./src/components/ChatMessage.vue?7c5f","webpack://chat/./src/utils/eventapi.js","webpack://chat/./src/views/chat.vue?33e7"],"sourcesContent":["<template>\r\n    <div id=\"chat\">\r\n        <transition-group :name=\"transition_group\">\r\n          <ChatMessage v-for=\"mes in Messages\" :key=\"mes.tags.id\" :PersonalEmotes=\"PersonalEmotes[mes.source.nick]\"\r\n          :Emotes=\"Emotes\" :GlobalBadges=\"GlobalBadges\"\r\n          :Paints=\"Paints\" :OtherBadges=\"OtherBadges\"\r\n          :defaultColors=\"defaultColors\" :payload=\"mes\"\r\n          :BG=\"mes.BG\" :overridedBadges=\"overridedBadges\" v-emoji/>\r\n        </transition-group>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n  // значки ффз (и чаттерино?)\r\n\r\n  import ChatMessage from '@/components/ChatMessage.vue'\r\n  import apis from '@/utils/tpd.js'\r\n  import EventApi from '@/utils/eventapi.js'\r\n  import Twitch from '@/utils/twitch.js'\r\n  import Common from '@/utils/common'\r\n  import { useHead } from '@vueuse/head'\r\n  \r\n  export default {\r\n    name: 'chat-page',\r\n    components: {\r\n        ChatMessage\r\n    },\r\n    data() {\r\n      return {\r\n        EventApi: null,\r\n\r\n        // settings:\r\n        // value: selectedValue || defaultValue\r\n        paintsEnabled: this.$route.query.paints || \"1\",\r\n        font_size: this.$route.query.font_size || \"18\",\r\n        // value: selectedValue != off (true by default)\r\n        altBG: this.$route.query.altbg != \"0\",\r\n        BG: this.$route.query.background || \"#2b2b2b\",\r\n        BG2: \"\",\r\n        useEventAPI: this.$route.query.eventapi != \"0\",\r\n        pEmotesEnabled: this.$route.query.pemotes != \"0\",\r\n        deleteAfter : this.$route.query.deleteafter || \"0\",\r\n        fontName: this.$route.query.fontname || \"roboto\",\r\n        ignoreList: (this.$route.query.ignore || \"\").toLowerCase().split(\" \"),\r\n\r\n        // other:\r\n        PersonalEmotes: {},\r\n\r\n        channel: this.$route.query.channel,\r\n        currBG: true,\r\n        IsDisconnected: false,\r\n        Emotes: {},\r\n        GlobalBadges: [],\r\n        OtherBadges: [],\r\n        Paints: [],\r\n        channelID: null,\r\n        client: null,\r\n        overridedBadges: false,\r\n        Messages: [],\r\n        defaultColors: [\"#4242f7\", \"#ff7f50\", \"#1e90ff\", \"#00ff7f\", \"#9acd32\", \"#008000\", \"#ff4500\", \"#ff0000\", \"#daa520\", \"#ff69b4\", \"#5f9ea0\", \"#2e8b57\", \"#d2691e\", \"#a065d7\", \"#b22222\"],\r\n      }\r\n    },\r\n    methods: {\r\n      onEmoteDelete(e) {\r\n        delete this.Emotes[e.old_value.id]\r\n      },\r\n      onEmoteAdd(e) {\r\n        this.Emotes[e.value.name] = {\"ID\": e.value.id, \"Type\": \"7TV\"}\r\n      },\r\n      onEmoteRename(e) {\r\n        console.log(e)\r\n        this.Emotes[e.value.name] = this.Emotes[e.old_value.name]\r\n        delete this.Emotes[e.old_value.name]\r\n      },\r\n      onPersonalEmotes(e, user) {\r\n        if (e != undefined && user != undefined && this.pEmotesEnabled) {\r\n          this.PersonalEmotes[user] = e\r\n        }\r\n      },\r\n      async get7tvchannel() {\r\n        let stv = await apis.RetryOnError(apis.get7tvEmotes, [this.channelID], 3)\r\n        if (stv.length > 0) {\r\n          console.log(\"loaded seventv channel\")\r\n          this.Emotes = Object.assign(this.Emotes, stv[0])\r\n\r\n          // initializing event api\r\n          if (this.useEventAPI) {\r\n            this.EventApi = new EventApi(stv[1], this.channelID, this.onEmoteAdd, this.onEmoteRename)\r\n\r\n            this.EventApi.onDelete = this.onEmoteDelete\r\n            this.EventApi.onAdd = this.onEmoteAdd\r\n            this.EventApi.onRename = this.onEmoteRename\r\n\r\n            this.EventApi.onPersonalEmotes = this.onPersonalEmotes\r\n\r\n            this.EventApi.Connect()\r\n          }\r\n        }\r\n      },\r\n      async getbttvchannel() {\r\n        this.Emotes = Object.assign(this.Emotes, await apis.RetryOnError(apis.getBttvEmotes, [this.channelID], 3))\r\n      },\r\n      async getsubscriberbadges() {\r\n        let subs = await apis.RetryOnError(apis.getSubscriberBadges, [this.channelID], 3)\r\n        if (subs) {\r\n          this.GlobalBadges[\"subscriber\"] = subs\r\n          console.log(\"loaded sub badges\")\r\n        }\r\n      },\r\n      async onUserID(id) {\r\n          console.log(this.channelID)\r\n          if (this.channelID == null) {\r\n            this.channelID = id\r\n\r\n            await this.getbttvchannel()\r\n            await this.get7tvchannel()\r\n            await this.getsubscriberbadges()\r\n          }\r\n        }\r\n    },\r\n    created: async function() {\r\n      useHead({\r\n          link: [{href: `https://fonts.googleapis.com/css2?family=${this.$route.query.fontname || \"Roboto\"}&display=swap`, rel: \"stylesheet\"}],\r\n        })\r\n\r\n        // check for bg:\r\n        if (this.BG != \"#2b2b2b\" && this.BG != \"transparent\") {\r\n          this.BG = \"#\" + this.BG\r\n        }\r\n\r\n        // alt bg creation:\r\n        if (this.altBG && this.BG != \"transparent\") {\r\n          let minus = 1\r\n          let gray = Common.toGray(this.BG) \r\n          if (gray > 0.38) {\r\n            minus = -30/gray\r\n          }\r\n          this.BG2 = Common.pSBC(0.01*minus, this.BG)\r\n        } else if (this.BG == \"transparent\") {\r\n          this.BG2 = \"transparent\"\r\n        }\r\n\r\n        this.client = new Twitch(this.channel);\r\n\r\n        this.client.OnUserId = this.onUserID\r\n        this.client.OnPrivateMessage = async (payload) => {\r\n          if (this.ignoreList.includes(payload.source.nick)) return\r\n\r\n          payload.BG = this.BG\r\n          if (this.altBG) {\r\n            payload.BG = this.currBG ? this.BG : this.BG2\r\n            this.currBG = !this.currBG\r\n          }\r\n          // payload.tags.color = undefined\r\n          // payload.PersonalEmotes = undefined\r\n          // if (payload.source.nick in this.PersonalEmotes) {\r\n          //   payload.PersonalEmotes = this.PersonalEmotes[payload.source.nick]\r\n          // }\r\n\r\n          this.Messages.push(payload)\r\n\r\n          if (this.deleteAfter != \"0\") {\r\n            setTimeout((id) => {\r\n              this.Messages = this.Messages.filter(item => item.tags[\"id\"] !== id)\r\n            }, parseInt(this.deleteAfter)*1000, payload.tags.id.slice());\r\n          }\r\n          if (this.Messages.length > 50) {\r\n            this.Messages.shift()\r\n          }\r\n        }\r\n        this.client.OnClearChat = async (payload) => {\r\n          this.Messages = this.Messages.filter(item => item.source.nick !== payload.parameters)\r\n        }\r\n        this.client.OnClearMessage = async (payload) => {\r\n          this.Messages = this.Messages.filter(item => item.tags[\"id\"] !== payload.tags[\"target-msg-id\"])\r\n        }\r\n\r\n        this.client.connect()\r\n        // getting data\r\n\r\n        try {\r\n          let userid = await apis.getUserID(this.channel)\r\n          console.log(userid)\r\n          await this.onUserID(userid)\r\n        } catch (error) {\r\n          // pass\r\n        }\r\n\r\n        this.Emotes = Object.assign(this.Emotes, await apis.RetryOnError(apis.get7tvGlobalEmotes, [], 3))\r\n        console.log(\"loaded 7tv global emotes\")\r\n        this.Emotes = Object.assign(this.Emotes, await apis.RetryOnError(apis.getBttvGlobalEmotes, [], 3))\r\n        console.log(\"loaded bttv global emotes\")\r\n\r\n        let ffz_data = await apis.RetryOnError(apis.getFfzEmotes, [this.channel], 3) // this contains emotes, mod badge, vip badge\r\n\r\n        if (ffz_data[0] != undefined) {this.Emotes = Object.assign(this.Emotes, ffz_data[0])}\r\n        console.log(\"loaded ffz channel emotes\")\r\n\r\n        this.Emotes = Object.assign(this.Emotes, await apis.RetryOnError(apis.getFfzGlobalEmotes, [], 3))\r\n        console.log(\"loaded ffz global emotes\")\r\n\r\n        let gb = await apis.RetryOnError(apis.getGlobalBadges, [], 3)\r\n        if (this.GlobalBadges[\"subscriber\"]) {\r\n          gb[\"subscriber\"] = this.GlobalBadges[\"subscriber\"]\r\n        }\r\n        this.GlobalBadges = gb\r\n        if (ffz_data[1] != undefined) {this.GlobalBadges[\"moderator\"][\"1\"] = ffz_data[1]; this.overridedBadges = true}\r\n        if (ffz_data[2] != undefined) this.GlobalBadges[\"vip\"][\"1\"] = ffz_data[2]\r\n\r\n        let bp = await apis.RetryOnError(apis.get7tvBadgesPaints, [], 3)\r\n        this.OtherBadges = bp[0]\r\n        this.OtherBadges.unshift({\"Users\": [\"407046453\"], \"Url\": \"https://i.imgur.com/qgO1Y7A.png\"}) // custom badges )))\r\n        this.OtherBadges.unshift({\"Users\": [\"521810742\"], \"Url\": \"https://cdn.7tv.app/emote/63d6ed00349f81ba10452fdd/2x.webp\"})\r\n        this.OtherBadges.unshift({\"Users\": [\"69078167\"], \"Url\": \"https://i.imgur.com/nIm3MvW.gif\"})\r\n        this.OtherBadges.unshift({\"Users\": [\"489131898\"], \"Url\": \"https://i.imgur.com/Kg7X4ga.gif\"})\r\n        this.Paints = bp[1]\r\n    },\r\n    computed: {\r\n      transition_group() {\r\n        if (this.deleteAfter != \"0\") return \"tr\"\r\n        return \"fl\"\r\n      }\r\n    }\r\n  }\r\n</script>\r\n  \r\n<style>\r\n  body {\r\n    margin: 0px;\r\n    overflow: hidden;\r\n  }\r\n  #chat {\r\n    position: absolute;\r\n    width: 100%;\r\n\r\n    bottom: 0;\r\n\r\n    overflow: hidden;\r\n    font-family: v-bind(fontName);\r\n  }\r\n\r\n  .tr-leave-active {\r\n    transition: opacity 0.5s ease;\r\n  }\r\n  .tr-leave-to {\r\n    opacity: 0;\r\n  }\r\n</style>\r\n  ","<template>\r\n    <div class=\"ChatMessage\">\r\n      <div v-for=\"badge in Badges\" :key=\"badge\" class=\"Badge\">\r\n          <img :provider=\"badge.provider\" :src=\"badge.Url\">\r\n      </div>\r\n      <span>\r\n        <span :HavePaints=\"HavePaints\" class=\"message-nick\" :style=\"{color: color}\">{{ nick }}: </span>\r\n        <span class=\"message-text\" :action=\"this.payload.action\" :HavePaints=\"HavePaints\" v-emotes=\"Emotes\" v-twitch-emotes=\"TwitchEmotes\" v-personal-emotes=\"PersonalEmotes\">\r\n          {{ this.payload.parameters }}\r\n        </span>\r\n      </span>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport Common from '@/utils/common'\r\nimport ColourDistance from '@/utils/colour'\r\n// import twemoji from 'twemoji'\r\n\r\n\r\nexport default {\r\n  name: 'ChatMessage',\r\n  data() {\r\n    return {\r\n      EmotesBaseUrl: {\r\n        \"7TV\": \"https://cdn.7tv.app/emote/{0}/2x.webp\",\r\n        \"BTTV\": \"https://cdn.betterttv.net/emote/{0}/2x\",\r\n        \"FFZ\": \"https://cdn.frankerfacez.com/emote/{0}/2\",\r\n        \"TWITCH\": \"\"\r\n      },\r\n      Paint: null,\r\n      HavePaints: false,\r\n      displayName: \"\",\r\n\r\n      dot : 0,\r\n\r\n      Badges: [],\r\n\r\n      smoothColors: this.$route.query.smoothcolor || \"1\",\r\n\r\n      paintsEnabled: this.$route.query.paints || \"1\",\r\n      shadowText: this.$route.query.shadowtext || \"0\",\r\n      font_size: this.$route.query.font_size || \"18\",\r\n      interpolateSize: this.$route.query.interpbs != \"0\",\r\n      border: this.$route.query.border || \"2\",\r\n      padding: this.$route.query.padding || \"1\",\r\n    }\r\n  },\r\n  props: {\r\n    PersonalEmotes: Array,\r\n    Emotes: Object,\r\n    OtherBadges: Array,\r\n    GlobalBadges: Object,\r\n    Paints: Array,\r\n\r\n    overridedBadges: Boolean,\r\n\r\n    defaultColors: Array,\r\n\r\n    payload: Object,\r\n    BG: String,\r\n  },\r\n  created: async function() {\r\n      if (this.payload.command.command != \"PRIVMSG\") {\r\n          return {}\r\n      }\r\n      this.displayName = this.payload.tags[\"display-name\"]\r\n      if (this.payload.tags[\"display-name\"] == undefined) {\r\n        this.displayName = this.payload.user\r\n      }\r\n\r\n      // twitch badges\r\n      if (this.payload.tags.badges) {\r\n        for (const [key, value] of Object.entries(this.payload.tags[\"badges\"])) {\r\n          if (this.GlobalBadges[key]) {\r\n            let provider = \"Twitch\"\r\n            if (this.overridedBadges && key == \"moderator\") provider = \"ffz-mod-badge\"\r\n            this.Badges.push({\"Url\": this.GlobalBadges[key][value], \"provider\": provider})\r\n          }\r\n        }\r\n      }\r\n      // parse extension badges\r\n      if (this.OtherBadges) {\r\n        for (const value of this.OtherBadges) {\r\n          if (value.Users.includes(this.payload.tags[\"user-id\"])) {\r\n            this.Badges.push({\"Url\": value.Url, \"provider\": value.Type})\r\n          }\r\n        }\r\n      }\r\n\r\n      // 7tv paints\r\n      if (this.paintsEnabled == \"1\") {\r\n        for (const value of this.Paints) {\r\n          if (value.users.includes(this.payload.tags[\"user-id\"])) {\r\n            this.HavePaints = true\r\n            this.Paint = value\r\n            break\r\n          }\r\n        }\r\n      }\r\n  },\r\n  computed: {\r\n    nick() {\r\n      if (this.displayName.toLowerCase() != this.payload.source.nick) return `${this.payload.source.nick} (${this.displayName})`\r\n      return this.displayName\r\n    },\r\n    color() {\r\n      let color = this.payload.tags.color\r\n      if (!this.payload.tags.color) {\r\n        color = this.defaultColors[Math.floor(Math.random() * this.defaultColors.length)]\r\n      }\r\n      if (this.BG != \"transparent\" && this.smoothColors == \"1\") {\r\n        // если сообщение сливается с фоном:\r\n        let userRGB = Common.hexToRgb(color)\r\n        let backgroundRGB = Common.hexToRgb(this.BG)\r\n\r\n        // схожесть цветов\r\n        let userXYZ = ColourDistance.rgb2xyz(userRGB[0], userRGB[1], userRGB[2])\r\n        let backgroundXYZ = ColourDistance.rgb2xyz(backgroundRGB[0], backgroundRGB[1], backgroundRGB[2])\r\n\r\n\r\n        let distance = ColourDistance.deltaE00(userXYZ[0], userXYZ[1], userXYZ[2], backgroundXYZ[0], backgroundXYZ[1], backgroundXYZ[2]) * 10\r\n        if (distance == 0) {\r\n          distance = 0.0001\r\n        }\r\n        if (distance < 0.3) {\r\n          // значит фон сливается, теперь мы добавляем/убавляем +40% яркость пользователю\r\n          let newColor = Common.pSBC(0.25, color)\r\n          return newColor\r\n        }\r\n      }\r\n      return color\r\n    },\r\n    TwitchEmotes() {\r\n      if (this.payload.tags.emotes) {\r\n        return Common.parse_smiles(this.payload.parameters, this.payload.tags[\"emotes\"])\r\n      }\r\n      return {}\r\n    },\r\n    bgImage() {\r\n      if (!this.Paint) {\r\n        return \"\"\r\n      }\r\n      const ccsFunc = this.Paint.function\r\n\r\n      const args = []\r\n      switch (this.Paint.function) {\r\n          case \"linear-gradient\":\r\n              args.push(`${this.Paint.angle}deg`)\r\n              break;\r\n          case \"radial-graient\":\r\n              args.push(this.Paint.shape ?? \"circle\")\r\n              break\r\n          case \"url\":\r\n              args.push(this.Paint.image_url ?? \"\")\r\n              break\r\n      }\r\n      let funcPrefix = \"\"\r\n      if (this.Paint.function !== \"URL\") {\r\n          funcPrefix = this.Paint.repeat ? \"repeating-\" : \"\"\r\n      }\r\n      for (const stop of this.Paint.stops) {\r\n          const color = Common.DecimalToStringRGBA(stop.color)\r\n          args.push(`${color} ${stop.at * 100}%`)\r\n      }\r\n      return `${funcPrefix}${ccsFunc}(${args.join(\", \")})`\r\n    },\r\n    filterText() {\r\n      if (this.shadowText == \"1\") {\r\n        return \"drop-shadow(1px 2px 1px #2b2b2b)\"\r\n      }\r\n      return \"\"\r\n    },\r\n    filter() {\r\n      try {\r\n        return this.Paint.drop_shadows\r\n        .map((v) => `drop-shadow(${v.x_offset}px ${v.y_offset}px ${v.radius}px ${Common.DecimalToStringRGBA(v.color)})`)\r\n        .join(\" \");\r\n      } catch (error) {\r\n        return \"\"\r\n      }\r\n    },\r\n    paintColor() {\r\n      if (!this.Paint) {\r\n        return \"\"\r\n      }\r\n      return Common.DecimalToStringRGBA(this.Paint.color)\r\n    },\r\n    badgeSize() {\r\n      if (this.interpolateSize && parseInt(this.font_size)) {\r\n        return Math.round(0.8 * parseInt(this.font_size) + 4.4).toString() + \"px\"\r\n      }\r\n      return \"18px\"\r\n    },\r\n    emoteSize() {\r\n      if (this.interpolateSize && parseInt(this.font_size)) {\r\n        return (parseInt(this.font_size) + 14).toString() + \"px\"\r\n      }\r\n      return \"32px\"\r\n    },\r\n    messageSize() {\r\n      if (this.interpolateSize && parseInt(this.font_size)) {\r\n        return Math.round(1.33 * parseInt(this.font_size) + 7).toString() + \"px\"\r\n      }\r\n      return \"31px\"\r\n    },\r\n    Font_Size() {\r\n        return `${this.font_size}px`\r\n    },\r\n    Border() {\r\n      return `${this.border}px solid black`\r\n    },\r\n    Padding() {\r\n      if (this.padding == \"1\") {\r\n        return \"3px\"\r\n      }\r\n      return \"0px\"\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n  .Badge {\r\n    display: inline-block;\r\n    padding-right: 3px;\r\n  }\r\n  .Badge img {\r\n    height: v-bind(badgeSize);\r\n    /* vertical-align: middle; */\r\n    margin-bottom: -3px;\r\n  }\r\n  .Badge img[provider=\"ffz-mod-badge\"] {\r\n    background-color: #00ad03;\r\n    border-radius: 2px;\r\n  }\r\n  .ChatMessage {\r\n    padding-top: v-bind(Padding);\r\n    padding-bottom: v-bind(Padding);\r\n\r\n    padding-left: 5px;\r\n\r\n    min-height: v-bind(messageSize);\r\n    font-size: v-bind(Font_Size);\r\n\r\n    width: 100%;\r\n\r\n    display: inline-block;\r\n\r\n    background: v-bind(BG);\r\n    color: white;\r\n    border-top: v-bind(Border);\r\n  }\r\n  .message-text {\r\n    bottom: 5px;\r\n    margin-right: 13px;\r\n    filter: v-bind('filterText');\r\n  }\r\n\r\n  .message-text img, .emoji {\r\n    height: v-bind(emoteSize);\r\n    vertical-align: middle;\r\n    filter: unset;\r\n    padding-right: 8px;\r\n  }\r\n  .message-nick {\r\n    font-weight: 700;\r\n\r\n    background-size: cover;\r\n    filter: v-bind('filter');\r\n    color: v-bind('paintColor');\r\n  }\r\n  .message-nick[HavePaints=\"true\"] {\r\n    -webkit-text-fill-color: transparent;\r\n    -webkit-background-clip: text;\r\n    background-clip: text !important;\r\n    background-color: currentcolor;\r\n    background-image: v-bind('bgImage');\r\n  }\r\n  .message-text img[ZeroWidth=\"true\"] {\r\n    position: absolute;\r\n\t\tz-index: 1;\r\n\t\ttransform: translateX(-100%);\r\n  }\r\n\r\n  .message-text[action=\"true\"][HavePaints=\"false\"] {\r\n    color: v-bind('color')\r\n  }\r\n\r\n  .message-text img[ZeroWidth=\"true\"] {\r\n    position: absolute;\r\n\t\tz-index: 1;\r\n\t\ttransform: translateX(-100%);\r\n  }\r\n\r\n  .message-text[action=\"true\"][HavePaints=\"true\"] {\r\n    filter: v-bind('filter');\r\n    color: v-bind('paintColor');\r\n    -webkit-text-fill-color: transparent;\r\n    -webkit-background-clip: text;\r\n    background-clip: text !important;\r\n    background-color: currentcolor;\r\n    background-image: v-bind('bgImage');\r\n  }\r\n</style>\r\n","import { render } from \"./ChatMessage.vue?vue&type=template&id=694e85ea\"\nimport script from \"./ChatMessage.vue?vue&type=script&lang=js\"\nexport * from \"./ChatMessage.vue?vue&type=script&lang=js\"\n\nimport \"./ChatMessage.vue?vue&type=style&index=0&id=694e85ea&lang=css\"\n\nimport exportComponent from \"S:\\\\golang\\\\eblanchat3.0\\\\eblanchat\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import apis from '@/utils/tpd.js'\r\n\r\n// const wait = async(ms) => {\r\n//     return new Promise((resolve) => {\r\n//         setTimeout(resolve, ms);\r\n//     });\r\n// };\r\n\r\nclass EventAPI {\r\n    constructor(set_id, user_id) {\r\n        this.ws = null\r\n        this.set_id = set_id\r\n        this.user_id = user_id //user_id\r\n        this.onDelete = undefined\r\n        this.onAdd = undefined\r\n        this.onRename = undefined\r\n\r\n        this.onPersonalEmotes = undefined\r\n\r\n        this.IsDisconnected = true\r\n\r\n        this.IsReconnecting = false\r\n\r\n        this.Timeout = 1000\r\n        this.attemps = 0\r\n    }\r\n\r\n    Connect() {\r\n        if (!this.IsDisconnected) return\r\n        \r\n        this.ws = new WebSocket(\"wss://events.7tv.io/v3\");\r\n        this.ws.onmessage = (e) => this.onMessage(e)\r\n        this.ws.onclose = () => this.onClose()\r\n        this.ws.onopen = () => this.onOpen()\r\n        this.ws.onerror = () => {this.ws.close()}\r\n        this.IsReconnecting = false\r\n    }\r\n\r\n    async onOpen() {\r\n        this.IsDisconnected = false\r\n        console.log(\"EVENT API connected\")\r\n    }\r\n\r\n    async onClose() {\r\n        if (this.IsReconnecting) return\r\n\r\n        this.IsReconnecting = true\r\n\r\n        console.log(\"EVENT API disconnected\")\r\n        this.IsDisconnected = true\r\n\r\n        this.attemps++\r\n        setTimeout(() => {this.Connect()}, this.Timeout*this.attemps)\r\n    }\r\n\r\n    subscribeToEvent(event, cond) {\r\n        let message = {\r\n            \"op\": 35,\r\n            \"d\": {\r\n                \"type\": event,\r\n                \"condition\": cond\r\n            }\r\n        }\r\n        this.ws.send(JSON.stringify(message))\r\n    }\r\n\r\n    async onMessage(e) {\r\n        let json = JSON.parse(e.data)\r\n        // console.log(json)\r\n        switch (json.op) {\r\n            case 4000, 4001, 4002, 4003, 4004, 4005, 4006, 4007, 4008, 4009, 4010, 4011: {\r\n                console.log(json)\r\n                this.ws.close()\r\n                this.Connect()\r\n                break\r\n            }\r\n            case 1: {\r\n                this.subscribeToEvent(\"emote_set.*\", {\"object_id\": this.set_id})\r\n                //other\r\n                const cond = {\r\n                    \"id\": this.user_id,\r\n                    \"ctx\": \"channel\",\r\n                    \"platform\": \"TWITCH\"\r\n                }\r\n                this.subscribeToEvent(\"emote_set.*\", cond)\r\n                this.subscribeToEvent(\"cosmetic.*\", cond)\r\n                this.subscribeToEvent(\"entitlement.*\", cond)\r\n                // this.subscribeToEvent(\"cosmetic.*\", {\r\n                //     \"id\": \"407046453\",\r\n                //     \"ctx\": \"user\",\r\n                //     \"platform\": \"TWITCH\"\r\n                // })\r\n                break\r\n            }\r\n            case 0:\r\n                switch (json.d.type) {\r\n                    case \"emote_set.update\": {\r\n                        if (json.d.body.pulled) {\r\n                            for (const item of json.d.body.pulled) {\r\n                                this.onDelete(item)\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (json.d.body.pushed) {\r\n                            for (const item of json.d.body.pushed) {\r\n                                this.onAdd(item)\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (json.d.body.updated) {\r\n                            for (const item of json.d.body.updated) {\r\n                                this.onRename(item)\r\n                                break;\r\n                            }\r\n                        }\r\n                        break\r\n                    }\r\n                    // personal emotes:\r\n                    case \"emote_set.create\": {\r\n                        if (json.d.body.object.name != \"Personal Emotes\") break\r\n                        let set_id = json.d.body.object.id\r\n\r\n                        this.onPersonalEmotes(...await apis.get7tvEmoteSet(set_id))\r\n\r\n                        break\r\n                    }\r\n                }\r\n                // че то произошло\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport default EventAPI","import { render } from \"./chat.vue?vue&type=template&id=0bbeddfd\"\nimport script from \"./chat.vue?vue&type=script&lang=js\"\nexport * from \"./chat.vue?vue&type=script&lang=js\"\n\nimport \"./chat.vue?vue&type=style&index=0&id=0bbeddfd&lang=css\"\n\nimport exportComponent from \"S:\\\\golang\\\\eblanchat3.0\\\\eblanchat\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["id","_createElementBlock","_createVNode","_TransitionGroup","name","$options","_Fragment","_renderList","$data","mes","_createBlock","_component_ChatMessage","key","tags","PersonalEmotes","source","nick","Emotes","GlobalBadges","Paints","OtherBadges","defaultColors","payload","BG","overridedBadges","class","badge","_createElementVNode","provider","src","Url","HavePaints","style","color","_hoisted_3","action","parameters","$props","__default__","data","EmotesBaseUrl","Paint","displayName","dot","Badges","smoothColors","this","$route","query","smoothcolor","paintsEnabled","paints","shadowText","shadowtext","font_size","interpolateSize","interpbs","border","padding","props","Array","Object","Boolean","String","created","async","command","undefined","user","badges","value","entries","push","Users","includes","Type","users","computed","toLowerCase","Math","floor","random","length","userRGB","Common","backgroundRGB","userXYZ","ColourDistance","backgroundXYZ","distance","newColor","TwitchEmotes","emotes","bgImage","ccsFunc","function","args","angle","shape","image_url","funcPrefix","repeat","stop","stops","at","join","filterText","filter","drop_shadows","map","v","x_offset","y_offset","radius","error","paintColor","badgeSize","parseInt","round","toString","emoteSize","messageSize","Font_Size","Border","Padding","__exports__","EventAPI","constructor","set_id","user_id","ws","onDelete","onAdd","onRename","onPersonalEmotes","IsDisconnected","IsReconnecting","Timeout","attemps","Connect","WebSocket","onmessage","e","onMessage","onclose","onClose","onopen","onOpen","onerror","close","console","log","setTimeout","subscribeToEvent","event","cond","message","send","JSON","stringify","json","parse","op","d","type","body","pulled","item","pushed","updated","object","apis","components","ChatMessage","EventApi","altBG","altbg","background","BG2","useEventAPI","eventapi","pEmotesEnabled","pemotes","deleteAfter","deleteafter","fontName","fontname","ignoreList","ignore","split","channel","currBG","channelID","client","Messages","methods","onEmoteDelete","old_value","onEmoteAdd","onEmoteRename","stv","assign","subs","getbttvchannel","get7tvchannel","getsubscriberbadges","useHead","link","href","rel","minus","gray","Twitch","OnUserId","onUserID","OnPrivateMessage","slice","shift","OnClearChat","OnClearMessage","connect","userid","ffz_data","gb","bp","unshift","transition_group","render"],"sourceRoot":""}