{"version":3,"file":"js/890.2e2c0a79.js","mappings":"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","sources":["webpack://chat/./src/views/chat.vue","webpack://chat/./src/components/ChatMessage.vue","webpack://chat/./src/components/message/Message.vue","webpack://chat/./src/components/message/Message.vue?8099","webpack://chat/./src/components/message/Nick.vue","webpack://chat/./src/components/message/Nick.vue?b1e0","webpack://chat/./src/components/message/Badges.vue","webpack://chat/./src/components/message/Badges.vue?ff8b","webpack://chat/./src/components/ChatMessage.vue?7c5f","webpack://chat/./src/utils/eventapi.js","webpack://chat/./src/views/chat.vue?33e7"],"sourcesContent":["<template>\r\n    <div id=\"chat\">\r\n        <transition-group :name=\"transition_group\">\r\n          <ChatMessage v-for=\"mes in Messages\" :key=\"mes.tags.id\" :PersonalEmotes=\"PersonalEmotes[mes.source.nick]\"\r\n          :Emotes=\"Emotes\" :GlobalBadges=\"GlobalBadges\"\r\n          :Paints=\"Paints\" :OtherBadges=\"OtherBadges\"\r\n          :defaultColors=\"defaultColors\" :payload=\"mes\"\r\n          :BG=\"mes.BG\" :overridedBadges=\"overridedBadges\" v-emoji/>\r\n        </transition-group>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n  // значки ффз (и чаттерино?)\r\n\r\n  import ChatMessage from '@/components/ChatMessage.vue'\r\n  import apis from '@/utils/tpd.js'\r\n  import EventApi from '@/utils/eventapi.js'\r\n  import Twitch from '@/utils/twitch.js'\r\n  import Common from '@/utils/common'\r\n  import { useHead } from '@vueuse/head'\r\n  \r\n  export default {\r\n    name: 'chat-page',\r\n    components: {\r\n        ChatMessage\r\n    },\r\n    data() {\r\n      return {\r\n        EventApi: null,\r\n\r\n        // settings:\r\n        // value: selectedValue || defaultValue\r\n        paintsEnabled: this.$route.query.paints || \"1\",\r\n        font_size: this.$route.query.font_size || \"18\",\r\n        // value: selectedValue != off (true by default)\r\n        altBG: this.$route.query.altbg != \"0\",\r\n        BG: this.$route.query.background || \"#2b2b2b\",\r\n        BG2: \"\",\r\n        useEventAPI: this.$route.query.eventapi != \"0\",\r\n        pEmotesEnabled: this.$route.query.pemotes != \"0\",\r\n        deleteAfter : this.$route.query.deleteafter || \"0\",\r\n        fontName: this.$route.query.fontname || \"roboto\",\r\n        ignoreList: (this.$route.query.ignore || \"\").toLowerCase().split(\" \"),\r\n\r\n        // other:\r\n        PersonalEmotes: {},\r\n\r\n        channel: this.$route.query.channel,\r\n        currBG: true,\r\n        IsDisconnected: false,\r\n        Emotes: {},\r\n        GlobalBadges: [],\r\n        OtherBadges: [],\r\n        Paints: [],\r\n        channelID: null,\r\n        client: null,\r\n        overridedBadges: false,\r\n        Messages: [],\r\n        defaultColors: [\"#4242f7\", \"#ff7f50\", \"#1e90ff\", \"#00ff7f\", \"#9acd32\", \"#008000\", \"#ff4500\", \"#ff0000\", \"#daa520\", \"#ff69b4\", \"#5f9ea0\", \"#2e8b57\", \"#d2691e\", \"#a065d7\", \"#b22222\"],\r\n      }\r\n    },\r\n    methods: {\r\n      onPaintCreate(e) {\r\n        for (const i in this.Paints) {\r\n          if (this.Paints[i] != undefined && this.Paints[i].name == e.data.name) {\r\n            this.Paints[i].users.push(e.user.id)\r\n            return\r\n          }\r\n        }\r\n        let pos = this.Paints.push(e.data)-1\r\n        this.Paints[pos].users = [e.user.id]\r\n      },\r\n      onPaintDelete(e) {\r\n        for (const i in this.Paints) {\r\n          if (this.Paints[i].id == e.data.id) {\r\n            this.Paints[i].users = this.Paints[i].users.filter(function(item) {\r\n                return item !== e.user.id\r\n            })\r\n            break\r\n          }\r\n        }\r\n      },\r\n\r\n      onBadgeCreate(e) {\r\n        for (const i in this.OtherBadges) {\r\n          if (this.OtherBadges[i] != undefined && this.OtherBadges[i].id == e.data.id) {\r\n            this.OtherBadges[i].Users.push(e.user.id)\r\n            return\r\n          }\r\n        }\r\n        let pos = this.OtherBadges.push({\"Url\": `https:${e.data.host.url}/2x`, \"id\": e.data.id})-1\r\n        this.OtherBadges[pos].Users = [e.user.id] \r\n      },\r\n      onBadgeDelete(e) {\r\n        for (const i in this.OtherBadges) {\r\n          if (this.OtherBadges[i].id == e.data.id) {\r\n            this.OtherBadges[i].Users = this.OtherBadges[i].Users.filter(function(item) {\r\n                return item !== e.user.id\r\n            })\r\n            break\r\n          }\r\n        }\r\n      },\r\n\r\n      onEmoteDelete(e) {\r\n        delete this.Emotes[e.old_value.name]\r\n      },\r\n      onEmoteAdd(e) {\r\n        this.Emotes[e.value.name] = {\"ID\": e.value.id, \"Type\": \"7TV\"}\r\n      },\r\n      onEmoteRename(e) {\r\n        console.log(e)\r\n        this.Emotes[e.value.name] = this.Emotes[e.old_value.name]\r\n        delete this.Emotes[e.old_value.name]\r\n      },\r\n\r\n      onPersonalEmotes(e, user) {\r\n        if (e != undefined && user != undefined && this.pEmotesEnabled) {\r\n          this.PersonalEmotes[user] = e\r\n        }\r\n      },\r\n\r\n      async get7tvchannel() {\r\n        let stv = await apis.RetryOnError(apis.get7tvEmotes, [this.channelID], 3)\r\n        if (stv.length > 0) {\r\n          console.log(\"loaded seventv channel\")\r\n          this.Emotes = Object.assign(this.Emotes, stv[0])\r\n\r\n          // initializing event api\r\n          if (this.useEventAPI) {\r\n            this.EventApi = new EventApi(stv[1], this.channelID, this.onEmoteAdd, this.onEmoteRename)\r\n\r\n            this.EventApi.onDelete = this.onEmoteDelete\r\n            this.EventApi.onAdd = this.onEmoteAdd\r\n            this.EventApi.onRename = this.onEmoteRename\r\n\r\n            this.EventApi.onBadgeCreate = this.onBadgeCreate\r\n            this.EventApi.onBadgeDelete = this.onBadgeDelete\r\n            this.EventApi.onPaintCreate = this.onPaintCreate\r\n            this.EventApi.onPaintDelete = this.onPaintDelete\r\n\r\n            this.EventApi.onPersonalEmotes = this.onPersonalEmotes\r\n\r\n            this.EventApi.Connect()\r\n          }\r\n        }\r\n      },\r\n      async getbttvchannel() {\r\n        this.Emotes = Object.assign(this.Emotes, await apis.RetryOnError(apis.getBttvEmotes, [this.channelID], 3))\r\n      },\r\n      async getsubscriberbadges() {\r\n        let subs = await apis.RetryOnError(apis.getSubscriberBadges, [this.channelID], 3)\r\n        if (subs) {\r\n          this.GlobalBadges[\"subscriber\"] = subs\r\n          console.log(\"loaded sub badges\")\r\n        }\r\n      },\r\n      async onUserID(id) {\r\n          console.log(this.channelID)\r\n          if (this.channelID == null) {\r\n            this.channelID = id\r\n\r\n            await this.getbttvchannel()\r\n            await this.get7tvchannel()\r\n            await this.getsubscriberbadges()\r\n          }\r\n        }\r\n    },\r\n    created: async function() {\r\n      useHead({\r\n          link: [{href: `https://fonts.googleapis.com/css2?family=${this.$route.query.fontname || \"Roboto\"}&display=swap`, rel: \"stylesheet\"}],\r\n        })\r\n\r\n        // check for bg:\r\n        if (this.BG != \"#2b2b2b\" && this.BG != \"transparent\") {\r\n          this.BG = \"#\" + this.BG\r\n        }\r\n\r\n        // alt bg creation:\r\n        if (this.altBG && this.BG != \"transparent\") {\r\n          let minus = 1\r\n          let gray = Common.toGray(this.BG) \r\n          if (gray > 0.38) {\r\n            minus = -30/gray\r\n          }\r\n          this.BG2 = Common.pSBC(0.01*minus, this.BG)\r\n        } else if (this.BG == \"transparent\") {\r\n          this.BG2 = \"transparent\"\r\n        }\r\n\r\n        this.client = new Twitch(this.channel);\r\n\r\n        this.client.OnUserId = this.onUserID\r\n        this.client.OnPrivateMessage = async (payload) => {\r\n          if (this.ignoreList.includes(payload.source.nick)) return\r\n\r\n          payload.BG = this.BG\r\n          if (this.altBG) {\r\n            payload.BG = this.currBG ? this.BG : this.BG2\r\n            this.currBG = !this.currBG\r\n          }\r\n          // payload.tags.color = undefined\r\n          // payload.PersonalEmotes = undefined\r\n          // if (payload.source.nick in this.PersonalEmotes) {\r\n          //   payload.PersonalEmotes = this.PersonalEmotes[payload.source.nick]\r\n          // }\r\n\r\n          this.Messages.push(payload)\r\n\r\n          if (this.deleteAfter != \"0\") {\r\n            setTimeout((id) => {\r\n              this.Messages = this.Messages.filter(item => item.tags[\"id\"] !== id)\r\n            }, parseInt(this.deleteAfter)*1000, payload.tags.id.slice());\r\n          }\r\n          if (this.Messages.length > 50) {\r\n            this.Messages.shift()\r\n          }\r\n        }\r\n        this.client.OnClearChat = async (payload) => {\r\n          this.Messages = this.Messages.filter(item => item.source.nick !== payload.parameters)\r\n        }\r\n        this.client.OnClearMessage = async (payload) => {\r\n          this.Messages = this.Messages.filter(item => item.tags[\"id\"] !== payload.tags[\"target-msg-id\"])\r\n        }\r\n\r\n        this.client.connect()\r\n        // getting data\r\n\r\n        try {\r\n          let userid = await apis.getUserID(this.channel)\r\n          console.log(userid)\r\n          await this.onUserID(userid)\r\n        } catch (error) {\r\n          // pass\r\n        }\r\n\r\n        this.Emotes = Object.assign(this.Emotes, await apis.RetryOnError(apis.get7tvGlobalEmotes, [], 3))\r\n        console.log(\"loaded 7tv global emotes\")\r\n        this.Emotes = Object.assign(this.Emotes, await apis.RetryOnError(apis.getBttvGlobalEmotes, [], 3))\r\n        console.log(\"loaded bttv global emotes\")\r\n\r\n        let ffz_data = await apis.RetryOnError(apis.getFfzEmotes, [this.channel], 3) // this contains emotes, mod badge, vip badge\r\n\r\n        if (ffz_data[0] != undefined) {this.Emotes = Object.assign(this.Emotes, ffz_data[0])}\r\n        console.log(\"loaded ffz channel emotes\")\r\n\r\n        this.Emotes = Object.assign(this.Emotes, await apis.RetryOnError(apis.getFfzGlobalEmotes, [], 3))\r\n        console.log(\"loaded ffz global emotes\")\r\n\r\n        let gb = await apis.RetryOnError(apis.getGlobalBadges, [], 3)\r\n        if (this.GlobalBadges[\"subscriber\"]) {\r\n          gb[\"subscriber\"] = this.GlobalBadges[\"subscriber\"]\r\n        }\r\n        this.GlobalBadges = gb\r\n        if (ffz_data[1] != undefined) {this.GlobalBadges[\"moderator\"][\"1\"] = ffz_data[1]; this.overridedBadges = true}\r\n        if (ffz_data[2] != undefined) this.GlobalBadges[\"vip\"][\"1\"] = ffz_data[2]\r\n\r\n        // let bp = await apis.RetryOnError(apis.get7tvBadgesPaints, [], 3)\r\n        this.OtherBadges = []\r\n        this.OtherBadges.unshift({\"Users\": [\"407046453\"], \"Url\": \"https://i.imgur.com/qgO1Y7A.png\"}) // custom badges )))\r\n        this.OtherBadges.unshift({\"Users\": [\"521810742\"], \"Url\": \"https://cdn.7tv.app/emote/63d6ed00349f81ba10452fdd/2x.webp\"})\r\n        this.OtherBadges.unshift({\"Users\": [\"69078167\"], \"Url\": \"https://i.imgur.com/nIm3MvW.gif\"})\r\n        this.OtherBadges.unshift({\"Users\": [\"489131898\"], \"Url\": \"https://i.imgur.com/Kg7X4ga.gif\"})\r\n        this.Paints = []\r\n    },\r\n    computed: {\r\n      transition_group() {\r\n        if (this.deleteAfter != \"0\") return \"tr\"\r\n        return \"fl\"\r\n      }\r\n    }\r\n  }\r\n</script>\r\n  \r\n<style>\r\n  body {\r\n    margin: 0px;\r\n    overflow: hidden;\r\n  }\r\n  #chat {\r\n    position: absolute;\r\n    width: 100%;\r\n\r\n    bottom: 0;\r\n\r\n    overflow: hidden;\r\n    font-family: v-bind(fontName);\r\n  }\r\n\r\n  .tr-leave-active {\r\n    transition: opacity 0.5s ease;\r\n  }\r\n  .tr-leave-to {\r\n    opacity: 0;\r\n  }\r\n</style>\r\n  ","<template>\r\n    <div class=\"ChatMessage\">\r\n      <Badges :Badges=\"this.Badges\"/>\r\n      <span>\r\n        <Nick :Tags=\"this.payload.tags\" :color=\"color\" :Login=\"this.payload.source.nick\"\r\n         :HavePaints=\"this.Paint != null\" :id=\"payload.tags.id\" />\r\n\r\n        <Message :HavePaints=\"(this.Paint != null).toString()\" :Emotes=\"Emotes\" :twEmotes=\"TwitchEmotes\" :pEmotes=\"PersonalEmotes\"\r\n         :Parameters=\"payload.parameters\" :Action=\"payload.action\" :color=\"this.color\" :id=\"payload.tags.id\" />\r\n      </span>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport ColourDistance from '@/utils/colour'\r\nimport Common from '@/utils/common'\r\n\r\nimport Message from '@/components/message/Message.vue'\r\nimport Nick from '@/components/message/Nick.vue'\r\nimport Badges from '@/components/message/Badges.vue'\r\n\r\n// import twemoji from 'twemoji'\r\n\r\n\r\nexport default {\r\n  name: 'ChatMessage',\r\n  components: {\r\n    Message,\r\n    Nick,\r\n    Badges\r\n  },\r\n  data() {\r\n    return {\r\n      EmotesBaseUrl: {\r\n        \"7TV\": \"https://cdn.7tv.app/emote/{0}/2x.webp\",\r\n        \"BTTV\": \"https://cdn.betterttv.net/emote/{0}/2x\",\r\n        \"FFZ\": \"https://cdn.frankerfacez.com/emote/{0}/2\",\r\n        \"TWITCH\": \"\"\r\n      },\r\n      // Paint: null,\r\n      HavePaints: false,\r\n      displayName: \"\",\r\n\r\n      Badges: [],\r\n\r\n      dot : 0,\r\n\r\n      smoothColors: this.$route.query.smoothcolor || \"1\",\r\n\r\n      paintsEnabled: this.$route.query.paints || \"1\",\r\n      shadowText: this.$route.query.shadowtext || \"0\",\r\n      font_size: this.$route.query.font_size || \"18\",\r\n      interpolateSize: this.$route.query.interpbs != \"0\",\r\n      border: this.$route.query.border || \"2\",\r\n      padding: this.$route.query.padding || \"1\",\r\n    }\r\n  },\r\n  props: {\r\n    PersonalEmotes: Array,\r\n    Emotes: Object,\r\n    OtherBadges: Array,\r\n    GlobalBadges: Object,\r\n    Paints: Array,\r\n\r\n    overridedBadges: Boolean,\r\n\r\n    defaultColors: Array,\r\n\r\n    payload: Object,\r\n    BG: String,\r\n  },\r\n  created: async function() {\r\n      if (this.payload.command.command != \"PRIVMSG\") {\r\n          return {}\r\n      }\r\n      if (this.payload.tags.badges) {\r\n        for (const [key, value] of Object.entries(this.payload.tags[\"badges\"])) {\r\n          if (this.GlobalBadges[key]) {\r\n            let provider = \"Twitch\"\r\n            if (this.overridedBadges && key == \"moderator\") provider = \"ffz-mod-badge\"\r\n            if (this.GlobalBadges[key][value] != undefined) {\r\n              this.Badges.push({\"Url\": this.GlobalBadges[key][value], \"provider\": provider})\r\n            }\r\n          }\r\n        }\r\n      }\r\n      if (this.OtherBadges) {\r\n        for (const value of this.OtherBadges) {\r\n          if (value.Users.includes(this.payload.tags[\"user-id\"])) {\r\n            this.Badges.push({\"Url\": value.Url, provider: \"none\"})\r\n          }\r\n        }\r\n      }\r\n  },\r\n  computed: {\r\n    color() {\r\n      let color = this.payload.tags.color\r\n      if (!this.payload.tags.color) {\r\n        color = this.defaultColors[Math.floor(Math.random() * this.defaultColors.length)]\r\n      }\r\n      if (this.BG != \"transparent\" && this.smoothColors == \"1\") {\r\n        // если сообщение сливается с фоном:\r\n        let userRGB = Common.hexToRgb(color)\r\n        let backgroundRGB = Common.hexToRgb(this.BG)\r\n\r\n        // схожесть цветов\r\n        let userXYZ = ColourDistance.rgb2xyz(userRGB[0], userRGB[1], userRGB[2])\r\n        let backgroundXYZ = ColourDistance.rgb2xyz(backgroundRGB[0], backgroundRGB[1], backgroundRGB[2])\r\n\r\n\r\n        let distance = ColourDistance.deltaE00(userXYZ[0], userXYZ[1], userXYZ[2], backgroundXYZ[0], backgroundXYZ[1], backgroundXYZ[2]) * 10\r\n        if (distance == 0) {\r\n          distance = 0.0001\r\n        }\r\n        if (distance < 0.3) {\r\n          // значит фон сливается, теперь мы добавляем/убавляем +40% яркость пользователю\r\n          let newColor = Common.pSBC(0.25, color)\r\n          return newColor\r\n        }\r\n      }\r\n      return color\r\n    },\r\n    Paint() {\r\n      if (this.paintsEnabled == \"1\") {\r\n        for (const value of this.Paints) {\r\n          if (value.users.includes(this.payload.tags[\"user-id\"])) {\r\n            return value\r\n          }\r\n        }\r\n      }\r\n      return null\r\n    },\r\n    TwitchEmotes() {\r\n      if (this.payload.tags.emotes) {\r\n        return Common.parse_smiles(this.payload.parameters, this.payload.tags[\"emotes\"])\r\n      }\r\n      return {}\r\n    },\r\n    bgImage() {\r\n      if (!this.Paint) {\r\n        return \"\"\r\n      }\r\n      let cssFunc = \"\"\r\n\r\n      const args = []\r\n      switch (this.Paint.function) {\r\n          case \"LINEAR_GRADIENT\":\r\n              cssFunc = \"linear-gradient\"\r\n              args.push(`${this.Paint.angle}deg`)\r\n              break;\r\n          case \"RADIAL_GRADIENT\":\r\n              cssFunc = \"radial-gradient\"\r\n              args.push(this.Paint.shape ?? \"circle\")\r\n              break\r\n          case \"URL\":\r\n              cssFunc = \"url-gradient\"\r\n              args.push(this.Paint.image_url ?? \"\")\r\n              break\r\n      }\r\n      let funcPrefix = \"\"\r\n      if (this.Paint.function !== \"URL\") {\r\n          funcPrefix = this.Paint.repeat ? \"repeating-\" : \"\"\r\n      }\r\n      for (const stop of this.Paint.stops) {\r\n          const color = Common.DecimalToStringRGBA(stop.color)\r\n          args.push(`${color} ${stop.at * 100}%`)\r\n      }\r\n      return `${funcPrefix}${cssFunc}(${args.join(\", \")})`\r\n    },\r\n    filterText() {\r\n      if (this.shadowText == \"1\") {\r\n        return \"drop-shadow(1px 2px 1px #2b2b2b)\"\r\n      }\r\n      return \"\"\r\n    },\r\n    filter() {\r\n      try {\r\n        return this.Paint.shadows\r\n        .map((v) => `drop-shadow(${v.x_offset}px ${v.y_offset}px ${v.radius}px ${Common.DecimalToStringRGBA(v.color)})`)\r\n        .join(\" \");\r\n      } catch (error) {\r\n        return \"\"\r\n      }\r\n    },\r\n    paintColor() {\r\n      if (!this.Paint) {\r\n        return \"\"\r\n      }\r\n      return Common.DecimalToStringRGBA(this.Paint.color)\r\n    },\r\n    badgeSize() {\r\n      if (this.interpolateSize && parseInt(this.font_size)) {\r\n        return Math.round(0.8 * parseInt(this.font_size) + 4.4).toString() + \"px\"\r\n      }\r\n      return \"18px\"\r\n    },\r\n    messageSize() {\r\n      if (this.interpolateSize && parseInt(this.font_size)) {\r\n        return Math.round(1.33 * parseInt(this.font_size) + 7).toString() + \"px\"\r\n      }\r\n      return \"31px\"\r\n    },\r\n    Font_Size() {\r\n        return `${this.font_size}px`\r\n    },\r\n    Border() {\r\n      return `${this.border}px solid black`\r\n    },\r\n    Padding() {\r\n      if (this.padding == \"1\") {\r\n        return \"3px\"\r\n      }\r\n      return \"0px\"\r\n    }\r\n  },\r\n  methods: {\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n  .Badge {\r\n    display: inline-block;\r\n    padding-right: 3px;\r\n  }\r\n  .Badge img {\r\n    height: v-bind(badgeSize);\r\n    /* vertical-align: middle; */\r\n    margin-bottom: -3px;\r\n  }\r\n  .Badge img[provider=\"ffz-mod-badge\"] {\r\n    background-color: #00ad03;\r\n    border-radius: 2px;\r\n  }\r\n  .ChatMessage {\r\n    padding-top: v-bind(Padding);\r\n    padding-bottom: v-bind(Padding);\r\n\r\n    padding-left: 5px;\r\n\r\n    min-height: v-bind(messageSize);\r\n    font-size: v-bind(Font_Size);\r\n\r\n    width: 100%;\r\n\r\n    display: inline-block;\r\n\r\n    background: v-bind(BG);\r\n    color: white;\r\n    border-top: v-bind(Border);\r\n  }\r\n  .message-text[action=\"true\"][HavePaints=\"true\"] {\r\n    filter: v-bind('filter');\r\n    color: v-bind('paintColor');\r\n    -webkit-text-fill-color: transparent;\r\n    -webkit-background-clip: text;\r\n    background-clip: text !important;\r\n    background-color: currentcolor;\r\n    background-image: v-bind('bgImage');\r\n  }\r\n  .message-nick {\r\n    font-weight: 700;\r\n\r\n    background-size: cover;\r\n    filter: v-bind('filter');\r\n    color: v-bind('paintColor');\r\n  }\r\n  .message-nick[HavePaints=\"true\"] {\r\n    -webkit-text-fill-color: transparent;\r\n    -webkit-background-clip: text;\r\n    background-clip: text !important;\r\n    background-color: currentcolor;\r\n    background-image: v-bind('bgImage');\r\n  }\r\n</style>\r\n","<template>\r\n    <span :id=\"'mes-'+id\" class=\"message-text\" :action=\"Action\" :HavePaints=\"HavePaints\"\r\n     v-emotes=\"Emotes\" v-twitch-emotes=\"twEmotes\" v-personal-emotes=\"pEmotes\">\r\n          {{ Parameters }}\r\n    </span>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'MessageText',\r\n\r\n  data() {\r\n    return {\r\n      interpolateSize: this.$route.query.interpbs != \"0\",\r\n      font_size: this.$route.query.font_size || \"18\",\r\n    }\r\n  },\r\n\r\n  props: {\r\n    HavePaints: String,\r\n    Emotes: Object,\r\n    pEmotes: Array,\r\n    twEmotes: Object,\r\n    Parameters: String,\r\n    Action: Boolean,\r\n    color: String,\r\n    id: String,\r\n  },\r\n\r\n  computed: {\r\n    emoteSize() {\r\n      if (this.interpolateSize == \"1\" && parseInt(this.font_size)) {\r\n        return (parseInt(this.font_size) + 14).toString() + \"px\"\r\n      }\r\n      return \"32px\"\r\n    },\r\n    Font_Size() {\r\n        return `${this.font_size}px`\r\n    },\r\n  },\r\n  watch: {\r\n    HavePaints() {\r\n      document.getElementById(\"mes-\"+this.id).setAttribute(\"HavePaints\", this.HavePaints)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n  .message-text img[ZeroWidth=\"true\"] {\r\n    position: absolute;\r\n\t\tz-index: 1;\r\n\t\ttransform: translateX(-100%);\r\n  }\r\n\r\n  .message-text[action=\"true\"][HavePaints=\"false\"] {\r\n    color: v-bind('color')\r\n  }\r\n  .message-text img[ZeroWidth=\"true\"] {\r\n    position: absolute;\r\n\t\tz-index: 1;\r\n\t\ttransform: translateX(-100%);\r\n  }\r\n  .message-text {\r\n    bottom: 5px;\r\n    margin-right: 13px;\r\n    filter: v-bind('filterText');\r\n  }\r\n\r\n  .message-text img, .emoji {\r\n    height: v-bind(emoteSize);\r\n    vertical-align: middle;\r\n    filter: unset;\r\n    padding-right: 8px;\r\n  }\r\n\r\n</style>","import { render } from \"./Message.vue?vue&type=template&id=1da8ee21\"\nimport script from \"./Message.vue?vue&type=script&lang=js\"\nexport * from \"./Message.vue?vue&type=script&lang=js\"\n\nimport \"./Message.vue?vue&type=style&index=0&id=1da8ee21&lang=css\"\n\nimport exportComponent from \"S:\\\\golang\\\\eblanchat3.0\\\\eblanchat\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n    <span :id=\"'nick-'+id\" :HavePaints=\"HavePaints\" class=\"message-nick\" :style=\"{color: color}\">{{ nick }}: </span>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n  name: 'MessageNick',\r\n\r\n  data() {\r\n    return {\r\n      displayName: \"\"\r\n    }\r\n  },\r\n\r\n  props: {\r\n    HavePaints: Boolean,\r\n    Login: String,\r\n    Tags: Object,\r\n    id: String,\r\n    color: String,\r\n  },\r\n\r\n  created() {\r\n    this.displayName = this.Tags[\"display-name\"]\r\n      if (this.Tags[\"display-name\"] == undefined) {\r\n        this.displayName = this.Login\r\n      }\r\n  },\r\n  \r\n  computed: {\r\n    nick() {\r\n      if (this.displayName.toLowerCase() != this.Login) return `${this.Login} (${this.displayName})`\r\n      return this.displayName\r\n    },\r\n  },\r\n  watch: {\r\n    HavePaints() {\r\n      document.getElementById(\"nick-\"+this.id).setAttribute(\"HavePaints\", this.HavePaints.toString())\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>","import { render } from \"./Nick.vue?vue&type=template&id=14ccba7a\"\nimport script from \"./Nick.vue?vue&type=script&lang=js\"\nexport * from \"./Nick.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"S:\\\\golang\\\\eblanchat3.0\\\\eblanchat\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n    <div v-for=\"badge in Badges\" :key=\"badge\" class=\"Badge\">\r\n        <img :provider=\"badge.provider\" :src=\"badge.Url\">\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'MessageBadges',\r\n\r\n  props: {\r\n    Badges: Array,\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>","import { render } from \"./Badges.vue?vue&type=template&id=3a66118e\"\nimport script from \"./Badges.vue?vue&type=script&lang=js\"\nexport * from \"./Badges.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"S:\\\\golang\\\\eblanchat3.0\\\\eblanchat\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./ChatMessage.vue?vue&type=template&id=ef23feda\"\nimport script from \"./ChatMessage.vue?vue&type=script&lang=js\"\nexport * from \"./ChatMessage.vue?vue&type=script&lang=js\"\n\nimport \"./ChatMessage.vue?vue&type=style&index=0&id=ef23feda&lang=css\"\n\nimport exportComponent from \"S:\\\\golang\\\\eblanchat3.0\\\\eblanchat\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import apis from '@/utils/tpd.js'\r\n\r\n// const wait = async(ms) => {\r\n//     return new Promise((resolve) => {\r\n//         setTimeout(resolve, ms);\r\n//     });\r\n// };\r\n\r\nclass EventAPI {\r\n    constructor(set_id, user_id) {\r\n        this.ws = null\r\n        this.set_id = set_id\r\n        this.user_id = user_id //user_id\r\n\r\n        this.onDelete = undefined\r\n        this.onAdd = undefined\r\n        this.onRename = undefined\r\n\r\n        this.onBadgeCreate = undefined\r\n        this.onBadgeDelete = undefined\r\n        this.onPaintCreate = undefined\r\n        this.onPaintDelete = undefined\r\n\r\n        this.pending = {}\r\n\r\n        this.onPersonalEmotes = undefined\r\n\r\n        this.IsDisconnected = true\r\n\r\n        this.IsReconnecting = false\r\n\r\n        this.Timeout = 1000\r\n        this.attemps = 0\r\n    }\r\n\r\n    Connect() {\r\n        if (!this.IsDisconnected) return\r\n        \r\n        this.ws = new WebSocket(\"wss://events.7tv.io/v3\");\r\n        this.ws.onmessage = (e) => this.onMessage(e)\r\n        this.ws.onclose = () => this.onClose()\r\n        this.ws.onopen = () => this.onOpen()\r\n        this.ws.onerror = () => {this.ws.close()}\r\n        this.IsReconnecting = false\r\n    }\r\n\r\n    async onOpen() {\r\n        this.IsDisconnected = false\r\n        console.log(\"EVENT API connected\")\r\n    }\r\n\r\n    async onClose() {\r\n        if (this.IsReconnecting) return\r\n\r\n        this.IsReconnecting = true\r\n\r\n        console.log(\"EVENT API disconnected\")\r\n        this.IsDisconnected = true\r\n\r\n        this.attemps++\r\n        setTimeout(() => {this.Connect()}, this.Timeout*this.attemps)\r\n    }\r\n\r\n    subscribeToEvent(event, cond) {\r\n        let message = {\r\n            \"op\": 35,\r\n            \"d\": {\r\n                \"type\": event,\r\n                \"condition\": cond\r\n            }\r\n        }\r\n        this.ws.send(JSON.stringify(message))\r\n    }\r\n\r\n    getTwitchConnection(connections) {\r\n        for (const con of connections) {\r\n            if (con.platform == \"TWITCH\") {\r\n                return con\r\n            }\r\n        }\r\n        return undefined\r\n    }\r\n\r\n    async onMessage(e) {\r\n        let json = JSON.parse(e.data)\r\n        // console.log(json)\r\n        switch (json.op) {\r\n            case 4000, 4001, 4002, 4003, 4004, 4005, 4006, 4007, 4008, 4009, 4010, 4011: {\r\n                console.log(json)\r\n                this.ws.close()\r\n                this.Connect()\r\n                break\r\n            }\r\n            case 1: {\r\n                this.subscribeToEvent(\"emote_set.*\", {\"object_id\": this.set_id})\r\n                //other\r\n                const cond = {\r\n                    \"id\": this.user_id,\r\n                    \"ctx\": \"channel\",\r\n                    \"platform\": \"TWITCH\"\r\n                }\r\n                this.subscribeToEvent(\"emote_set.*\", cond)\r\n                this.subscribeToEvent(\"cosmetic.*\", cond)\r\n                this.subscribeToEvent(\"entitlement.*\", cond)\r\n                // this.subscribeToEvent(\"cosmetic.*\", {\r\n                //     \"id\": \"407046453\",\r\n                //     \"ctx\": \"user\",\r\n                //     \"platform\": \"TWITCH\"\r\n                // })\r\n                break\r\n            }\r\n            case 0:\r\n                switch (json.d.type) {\r\n                    case \"emote_set.update\": {\r\n                        // if (json.d.body.contextual) return\r\n\r\n                        if (json.d.body.pulled) {\r\n                            for (const item of json.d.body.pulled) {\r\n                                this.onDelete(item)\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (json.d.body.pushed) {\r\n                            for (const item of json.d.body.pushed) {\r\n                                this.onAdd(item)\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (json.d.body.updated) {\r\n                            for (const item of json.d.body.updated) {\r\n                                this.onRename(item)\r\n                                break;\r\n                            }\r\n                        }\r\n                        break\r\n                    }\r\n                    // personal emotes:\r\n                    case \"emote_set.create\": {\r\n                        if (json.d.body.object.name != \"Personal Emotes\") break\r\n                        let set_id = json.d.body.object.id\r\n\r\n                        this.onPersonalEmotes(...await apis.get7tvEmoteSet(set_id))\r\n\r\n                        break\r\n                    }\r\n                    \r\n                    // paints & badges auto update\r\n                    case \"cosmetic.create\": {\r\n                        switch (json.d.body.object.kind) {\r\n                            case \"PAINT\": {\r\n                                this.pending[json.d.body.object.id] =json.d.body.object\r\n                                break;\r\n                            }\r\n                            case \"BADGE\": {\r\n                                this.pending[json.d.body.object.id] = json.d.body.object\r\n                                break;\r\n                            }\r\n                        }\r\n                        break\r\n                    }\r\n\r\n                    case \"entitlement.create\": {\r\n                        let p = this.pending[json.d.body.object.ref_id]\r\n\r\n                        if (p == undefined) break\r\n\r\n                        switch (p.kind) {\r\n                            case \"PAINT\": {\r\n                                p.user = this.getTwitchConnection(json.d.body.object.user.connections)\r\n                                this.onPaintCreate(p)\r\n                                break\r\n                            }\r\n                            case \"BADGE\": {\r\n                                p.user = this.getTwitchConnection(json.d.body.object.user.connections)\r\n                                this.onBadgeCreate(p)\r\n                                break\r\n                            }\r\n                        }\r\n                        break\r\n                    }\r\n                    case \"entitlement.delete\": {\r\n                        let p = this.pending[json.d.body.object.ref_id]\r\n\r\n                        if (p == undefined) break\r\n\r\n                        switch (p.kind) {\r\n                            case \"PAINT\": {\r\n                                p.user = this.getTwitchConnection(json.d.body.object.user.connections)\r\n                                this.onPaintDelete(p)\r\n                                break\r\n                            }\r\n                            case \"BADGE\": {\r\n                                p.user = this.getTwitchConnection(json.d.body.object.user.connections)\r\n                                this.onBadgeDelete(p)\r\n                                break\r\n                            }\r\n                        }\r\n                        // delete this.pending[json.d.body.object.ref_id]\r\n                        break\r\n                    }\r\n                }\r\n                // че то произошло\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport default EventAPI","import { render } from \"./chat.vue?vue&type=template&id=d2c4eeee\"\nimport script from \"./chat.vue?vue&type=script&lang=js\"\nexport * from \"./chat.vue?vue&type=script&lang=js\"\n\nimport \"./chat.vue?vue&type=style&index=0&id=d2c4eeee&lang=css\"\n\nimport exportComponent from \"S:\\\\golang\\\\eblanchat3.0\\\\eblanchat\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["id","_createElementBlock","_createVNode","_TransitionGroup","name","$options","_Fragment","_renderList","$data","mes","_createBlock","_component_ChatMessage","key","tags","PersonalEmotes","source","nick","Emotes","GlobalBadges","Paints","OtherBadges","defaultColors","payload","BG","overridedBadges","class","_component_Badges","Badges","_createElementVNode","_component_Nick","Tags","color","Login","HavePaints","Paint","$props","_component_Message","toString","twEmotes","pEmotes","Parameters","parameters","Action","action","__default__","data","interpolateSize","this","$route","query","interpbs","font_size","props","String","Object","Array","Boolean","computed","emoteSize","parseInt","Font_Size","watch","document","getElementById","setAttribute","__exports__","style","_hoisted_1","displayName","created","undefined","toLowerCase","badge","provider","src","Url","components","Message","Nick","EmotesBaseUrl","dot","smoothColors","smoothcolor","paintsEnabled","paints","shadowText","shadowtext","border","padding","async","command","badges","value","entries","push","Users","includes","Math","floor","random","length","userRGB","Common","backgroundRGB","userXYZ","ColourDistance","backgroundXYZ","distance","newColor","users","TwitchEmotes","emotes","bgImage","cssFunc","args","function","angle","shape","image_url","funcPrefix","repeat","stop","stops","at","join","filterText","filter","shadows","map","v","x_offset","y_offset","radius","error","paintColor","badgeSize","round","messageSize","Border","Padding","methods","EventAPI","constructor","set_id","user_id","ws","onDelete","onAdd","onRename","onBadgeCreate","onBadgeDelete","onPaintCreate","onPaintDelete","pending","onPersonalEmotes","IsDisconnected","IsReconnecting","Timeout","attemps","Connect","WebSocket","onmessage","e","onMessage","onclose","onClose","onopen","onOpen","onerror","close","console","log","setTimeout","subscribeToEvent","event","cond","message","send","JSON","stringify","getTwitchConnection","connections","con","platform","json","parse","op","d","type","body","pulled","item","pushed","updated","object","apis","kind","p","ref_id","user","ChatMessage","EventApi","altBG","altbg","background","BG2","useEventAPI","eventapi","pEmotesEnabled","pemotes","deleteAfter","deleteafter","fontName","fontname","ignoreList","ignore","split","channel","currBG","channelID","client","Messages","i","pos","host","url","onEmoteDelete","old_value","onEmoteAdd","onEmoteRename","stv","assign","subs","getbttvchannel","get7tvchannel","getsubscriberbadges","useHead","link","href","rel","minus","gray","Twitch","OnUserId","onUserID","OnPrivateMessage","slice","shift","OnClearChat","OnClearMessage","connect","userid","ffz_data","gb","unshift","transition_group","render"],"sourceRoot":""}