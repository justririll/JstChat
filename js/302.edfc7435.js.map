{"version":3,"file":"js/302.edfc7435.js","mappings":"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","sources":["webpack://chat/./src/views/main.vue","webpack://chat/./src/components/ChatMessage_example.vue","webpack://chat/./src/components/ChatMessage_example.vue?cf30","webpack://chat/./src/views/main.vue?544f"],"sourcesContent":["<style>\r\n  #main {\r\n    width: 100%;\r\n    height: 100%;\r\n\r\n    font-family: 'Roboto', sans-serif;\r\n\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n\r\n    overflow: auto;\r\n    \r\n    background: rgb(46, 46, 46);\r\n    color: white;\r\n  }\r\n\r\n  button {\r\n    min-width: 5vw;\r\n    font-size: 2.4vh;\r\n    border: 1px solid black;\r\n    background-color: #494949;\r\n    color: white;\r\n    border-radius: 8px;\r\n    margin-left: 0.5vw;\r\n  }\r\n\r\n  .out_url {\r\n    min-width: 50vw;\r\n  }\r\n  #out {\r\n    margin-left: 10vw;\r\n    margin-top: 5vh;\r\n  }\r\n\r\n  .setting-bottom {\r\n    width: 10vw;\r\n    display: inline-block;\r\n    margin-left: 12vw;\r\n    padding-top: 10vh;\r\n  }\r\n  input {\r\n    min-width: 50px;\r\n    max-width: 75px;\r\n    min-height: 25px;\r\n    background-color: #494949;\r\n    color: white;\r\n    border: 1px solid black;\r\n    border-radius: 8px;\r\n    font-size: 2.4vh;\r\n    text-align: center;\r\n  }\r\n\r\n  select {\r\n    min-width: 5vw;\r\n    min-height: 4vh;\r\n    background-color: #494949;\r\n    color: white;\r\n    border: 1px solid black;\r\n    border-radius: 8px;\r\n    font-size: 3vh;\r\n    text-align: center;\r\n  }\r\n\r\n  .checkbox {\r\n    min-width: 25px;\r\n    min-height: 25px;\r\n  }\r\n\r\n  .chat {\r\n    width: 25%;\r\n    height: 100%;\r\n    position: fixed;\r\n\r\n    bottom: 0;\r\n\r\n    overflow: hidden;\r\n\r\n    user-select: none;\r\n\r\n    font-family: v-bind(fontName);\r\n  }\r\n\r\n  .chat-box {\r\n    position: absolute;\r\n    bottom: 0;\r\n\r\n    width: 100%;\r\n  }\r\n\r\n  .author {\r\n    /* min-width: 600px; */\r\n\r\n    border-left: 4px solid black;\r\n\r\n    width: 75%;\r\n    height: 10%;\r\n    position: fixed;\r\n    bottom: 0;\r\n    left: 25%;\r\n\r\n    font-size: 1.5vh;\r\n  }\r\n  .author-name {\r\n    text-align: center;\r\n    vertical-align:middle;\r\n    padding-top: 2vh;\r\n    height: 10%;\r\n  }\r\n\r\n  .quick-settings {\r\n    position: fixed;\r\n    left: 25%;\r\n    width: 75%;\r\n    height: 18%;\r\n    \r\n    border-left: 4px solid black;\r\n    border-bottom: 4px solid black;\r\n  }\r\n\r\n  .url {\r\n    position: fixed;    \r\n    left: 25%;\r\n    bottom: 10%;\r\n    width: 75%;\r\n    height: 14%;\r\n\r\n    border-left: 4px solid black;\r\n    border-top: 4px solid black;\r\n  }\r\n\r\n  .settings {\r\n    border-left: 4px solid black;\r\n\r\n    width: 75%;\r\n    height: 57%;\r\n    position: fixed;\r\n    bottom: 10%;\r\n    left: 25%;\r\n\r\n    top: 18.5%;\r\n    bottom: 14.5%;\r\n\r\n    overflow: auto;\r\n  }\r\n\r\n  a {\r\n    color: white;\r\n  }\r\n\r\n  .debug-description {\r\n    text-align: center;\r\n    vertical-align:middle;\r\n    padding-top: 6vh;\r\n    font-size: 30px;\r\n  }\r\n\r\n  .mes {\r\n    width: 100%;\r\n  }\r\n\r\n  #channel-select {\r\n    /* margin-left: 30%; */\r\n    margin-top: 2vh;\r\n  }\r\n\r\n  .github-page {\r\n    text-align: right;\r\n    padding-top: 2vh;\r\n    padding-right: 2vw;\r\n  }\r\n\r\n  #style-select {\r\n    /* margin-left: 40%; */\r\n    margin-top: 2vh;\r\n  }\r\n\r\n  /* this is need only for settigs block */\r\n  .nsetting {\r\n    background-color: #414040;\r\n    min-height: 7vh;\r\n    width: 100%;\r\n    display: block;\r\n    border-bottom: 2px solid black;\r\n  }\r\n  .nsetting-name {\r\n    margin-top: 1vh;\r\n    margin-left: 2vw;\r\n    display: inline-block;\r\n    font-size: 2vh;\r\n    width: 40%;\r\n  }\r\n  .nsetting-input {\r\n    margin-top: 1vh;\r\n    margin-right: 1vw;\r\n    float: right;\r\n  }\r\n\r\n  .small-desc {\r\n    font-size: 1.5vh;\r\n    opacity: 0.5;\r\n  }\r\n\r\n  /* and this need for out and style select LULE */\r\n  .setting {\r\n    display: inline-block;\r\n    margin-left: 3.5vw;\r\n    margin-top: 6vh;\r\n    text-align: center;\r\n  }\r\n\r\n  #ignore-list {\r\n    max-width: 15vw;\r\n  }\r\n</style>\r\n\r\n<template>\r\n<div id=\"main\">\r\n\r\n    <div style=\"background-color: rgb(64 64 64);\" class=\"chat\" ref=\"chat\">\r\n        <div class=\"chat-box\">\r\n          <ChatMessage class=\"mes\" v-for=\"mes in Messages\" :key=\"mes.tags.id\"\r\n          :Emotes=\"Emotes\" :Paints=\"Paints\" :GlobalBadges=\"GlobalBadges\"\r\n          :payload=\"mes\" :BG=\"BG\" :BG2=\"BG2\" :paintsEnabled=\"paintsEnabled\" \r\n          :font_size=\"fontSize\" :interpolateSize=\"interpolateSize\"\r\n          :OtherBadges=\"OtherBadges\" :defaultColors=\"defaultColors\"\r\n          :SmoothColors=\"SmoothColors\" :border=\"Border\" :shadowText=\"textShadow\"\r\n          :padding=\"padding\" :overridedBadges=\"overridedBadges\"/>\r\n        </div>\r\n    </div>\r\n\r\n    <div style=\"background-color: #3a3a3a;\" class=\"author\">\r\n\r\n      <div class=\"author-name\">\r\n        Made by JustRirill (rj_st) <br>\r\n        Github link <a href=\"https://github.com/justririll/JstChat\" target=\"_blank\">here</a> <br>\r\n        This application is not affiliated with Twitch\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"quick-settings\">\r\n      <center>\r\n        <div class=\"setting\" id=\"channel-select\">\r\n          <div class=\"setting-name\">Channel name</div>\r\n          <input type=\"text\" :value=\"selectedChannel\" v-on:input=\"onChangeChannel\">\r\n        </div>\r\n        <button :onClick=\"join\">Try it!</button>\r\n\r\n        <div class=\"setting\" id=\"style-select\">\r\n          <div class=\"setting-name\">Style</div>\r\n          <select @change=\"changeStyle\">\r\n            <option value=\"1\">1</option>\r\n            <option value=\"2\">2</option>\r\n          </select>\r\n        </div>\r\n      </center>\r\n    </div>\r\n\r\n    <div class=\"settings\">\r\n\r\n      <div class=\"nsetting\">\r\n          <div class=\"nsetting-name\">Font size</div>\r\n          <input class=\"nsetting-input\" type=\"number\" :value=\"fontSize\" min=\"4\" max=\"150\" v-on:input=\"onChangeFontSize\">\r\n      </div>\r\n\r\n      <div class=\"nsetting\">\r\n          <div class=\"nsetting-name\">Background color <br> <span class=\"small-desc\">(in hex)</span></div>\r\n          <input class=\"nsetting-input\" onclick=\"this.select();\" type=\"text\" :value=\"BG\" v-on:input=\"onChangeBG\">\r\n      </div>\r\n\r\n      <div class=\"nsetting\">\r\n          <div class=\"nsetting-name\">Ignore list<br> <span class=\"small-desc\">(separate nicks by space; will not affect chat on the left)</span></div>\r\n          <input id=\"ignore-list\" class=\"nsetting-input\" type=\"text\" :value=\"ignoreList\" v-on:input=\"onChangeIgnore\">\r\n      </div>\r\n\r\n      <div class=\"nsetting\">\r\n        <div class=\"nsetting-name\">Font name from <a target=\"_blank\" href=\"https://fonts.google.com/\">here</a> <br> <span class=\"small-desc\">(e.g. \"Castoro Titling\"; CASE SENSITIVE!)</span></div>\r\n        <input class=\"nsetting-input\" onclick=\"this.select();\" type=\"text\" :value=\"fontName\" v-on:change=\"onChangeFont\">\r\n      </div>\r\n\r\n      <div class=\"nsetting\">\r\n        <div class=\"nsetting-name\">Fade after (0 = disable) <br> <span class=\"small-desc\">(will not affect chat on the left)</span></div>\r\n        <input class=\"nsetting-input\" onclick=\"this.select();\" type=\"text\" :value=\"deleteAfter\" v-on:input=\"onChangeFade\">\r\n      </div>\r\n\r\n      <div class=\"nsetting\">\r\n        <div class=\"nsetting-name\">7TV paints</div>\r\n        <input class=\"nsetting-input\" type=\"checkbox\" :value=\"paintsEnabled\" v-on:input=\"onChangePaints\" checked>\r\n      </div>\r\n\r\n      <div class=\"nsetting\">\r\n        <div class=\"nsetting-name\">Space between messages</div>\r\n        <input class=\"nsetting-input\" type=\"checkbox\" :value=\"padding\" v-on:input=\"onChangePadding\" checked>\r\n      </div>\r\n\r\n      <div class=\"nsetting\">\r\n        <div class=\"nsetting-name\">Text shadow</div>\r\n        <input class=\"nsetting-input\" type=\"checkbox\" v-model=\"textShadow\" true-value=\"1\" false-value=\"0\" :value=\"textShadow\" v-on:input=\"onChangeShadow\">\r\n      </div>\r\n\r\n      <div class=\"nsetting\">\r\n        <div class=\"nsetting-name\">Smooth colors <br> <span class=\"small-desc\">(works with non-transparent background only)</span></div>\r\n        <input class=\"nsetting-input\" type=\"checkbox\" :value=\"SmoothColors\" v-on:input=\"onChangeSmooth\" checked>\r\n      </div>\r\n\r\n      <div class=\"nsetting\">\r\n        <div class=\"nsetting-name\">Border</div>\r\n        <input class=\"nsetting-input\" type=\"checkbox\" :value=\"Border\" v-on:input=\"onChangeBorder\" checked>\r\n      </div>\r\n\r\n      <div class=\"nsetting\">\r\n        <div class=\"nsetting-name\">7TV personal emotes <br> <span class=\"small-desc\">(works with EventAPI only)</span></div>\r\n        <input class=\"nsetting-input\" type=\"checkbox\" :value=\"pEmotes\" v-on:input=\"onChangepEmotes\" checked>\r\n      </div>\r\n\r\n      <div class=\"nsetting\">\r\n        <div class=\"nsetting-name\">7TV event api</div>\r\n        <input class=\"nsetting-input\" type=\"checkbox\" :value=\"eventApi\" v-on:input=\"onChangeEventApi\" checked>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"url\">\r\n      <div class=\"setting\" id=\"out\">\r\n        <div class=\"setting-name\">Your URL:</div>\r\n        <input onclick=\"this.select(); navigator.clipboard.writeText(this.value);\" class=\"out_url\" type=\"text\" :value=\"out_url\" readonly>\r\n      </div>\r\n    </div>\r\n    \r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport ChatMessage from '@/components/ChatMessage_example.vue'\r\nimport Common from '@/utils/common'\r\nimport Twitch from '@/utils/twitch.js'\r\nimport apis from '@/utils/tpd.js'\r\nimport { useHead } from '@vueuse/head'\r\n\r\nexport default {\r\n    name: 'main-page',\r\n    components: {\r\n      ChatMessage\r\n    },\r\n    data() {\r\n      return {\r\n        paintsEnabled: \"1\",\r\n        fontSize: \"18\",\r\n        interpolateSize: \"1\",\r\n        SmoothColors: \"1\",\r\n        Border: \"2\",\r\n        pEmotes: \"1\",\r\n        eventApi: \"1\",\r\n        textShadow: \"0\",\r\n        deleteAfter: \"0\",\r\n        fromBottom: \"0\",\r\n        padding: \"1\",\r\n\r\n        ignoreList: \"\",\r\n        \r\n        fontName: \"Roboto\",\r\n\r\n        altBG: true,\r\n        BG: \"#2b2b2b\",\r\n        BG2: \"\",\r\n\r\n        PersonalEmotes: {},\r\n\r\n        GlobalBadges: [],\r\n        OtherBadges: [],\r\n        Messages: {},\r\n        Emotes: {},\r\n        Badges: {},\r\n        Paints: [],\r\n\r\n        //\r\n        currBG: true,\r\n\r\n        channel: \"\", // this is channel for websocket\r\n        selectedChannel: \"\", // this is channel from input, for url generating\r\n\r\n        client: null,\r\n        evenapi: null,\r\n\r\n        overridedBadges: false,\r\n\r\n        defaultColors: [\"#4242f7\", \"#ff7f50\", \"#1e90ff\", \"#00ff7f\", \"#9acd32\", \"#008000\", \"#ff4500\", \"#ff0000\", \"#daa520\", \"#ff69b4\", \"#5f9ea0\", \"#2e8b57\", \"#d2691e\", \"#a065d7\", \"#b22222\"],\r\n      }\r\n    },\r\n    updated() {\r\n      this.$refs.chat.scrollTo(0,this.$refs.chat.scrollHeight);\r\n      if (this.Messages.length > 25) {\r\n        this.Messages.shift()\r\n      }\r\n    },\r\n    created: async function() {\r\n      // this we need to put in bg setting update\r\n      if (this.BG != \"#2b2b2b\" && this.BG != \"transparent\") {\r\n          this.BG = \"#\" + this.BG\r\n        }\r\n\r\n      // alt bg creation:\r\n      if (this.altBG && this.BG != \"transparent\") {\r\n        let minus = 1\r\n        let gray = Common.toGray(this.BG) \r\n        if (gray > 0.38) {\r\n          minus = -30/gray\r\n        }\r\n        this.BG2 = Common.pSBC(0.01*minus, this.BG)\r\n      } else if (this.BG == \"transparent\") {\r\n        this.BG2 = \"transparent\"\r\n      }\r\n\r\n      await this.create_client()\r\n    },\r\n    methods: {\r\n      changeStyle(event) {\r\n        switch (event.target.value.trim()) {\r\n          case \"1\":\r\n            this.Border = \"2\"\r\n\r\n            this.BG = \"#2b2b2b\"\r\n            this.BG2 = \"#323232\"\r\n\r\n            this.SmoothColors = \"1\"\r\n\r\n            this.textShadow = \"0\"\r\n            break;\r\n        \r\n          case \"2\":\r\n            this.Border = \"0\"\r\n\r\n            this.BG = \"transparent\"\r\n            this.BG2 = \"transparent\"\r\n\r\n            this.SmoothColors = \"0\"\r\n\r\n            this.textShadow = \"1\"\r\n            break;\r\n        }\r\n      },\r\n\r\n      onChangeChannel(event) {\r\n        this.selectedChannel = event.target.value.trim().toLowerCase()\r\n      },\r\n      onChangeIgnore(event) {\r\n        this.ignoreList = event.target.value\r\n      },\r\n      onChangeFontSize(event) {\r\n        let i = parseInt(event.target.value.trim())\r\n        if (i > 0 && i <= 150) this.fontSize = event.target.value.trim()\r\n      },\r\n      onChangepEmotes() {\r\n        this.pEmotes = this.pEmotes.trim() == \"1\" ? \"0\" : \"1\"\r\n      },\r\n      onChangePadding() {\r\n        this.padding = this.padding.trim() == \"1\" ? \"0\" : \"1\"\r\n      },\r\n      onChangeShadow() {\r\n        this.textShadow = this.textShadow.trim() == \"0\" ? \"1\" : \"0\"\r\n      },\r\n      onChangeBorder() {\r\n        this.Border = this.Border.trim() == \"2\" ? \"0\" : \"2\"\r\n      },\r\n      onChangeBG(event) {\r\n        let newBG =event.target.value.trim()\r\n        if (newBG == \"transparent\" || newBG == \"none\" || newBG == \"\") {\r\n          this.BG = \"transparent\"\r\n          this.BG2 = \"transparent\"\r\n        } else if (newBG.length == 7 && newBG.substring(0, 1) == \"#\") {\r\n          try {\r\n            this.BG = newBG\r\n            let minus = 1\r\n            let gray = Common.toGray(this.BG)\r\n            if (gray > 0.38) {\r\n              minus = -30/gray\r\n            }\r\n            this.BG2 = Common.pSBC(0.01*minus, this.BG)\r\n          } catch(e) {\r\n            // pass\r\n          }\r\n        }\r\n      },\r\n      onChangeFade(event) {\r\n        const parsed = parseInt(event.target.value.trim());\r\n        if (isNaN(parsed)) this.deleteAfter = \"0\";\r\n        else this.deleteAfter = event.target.value.trim();\r\n      },\r\n      onChangeFont(event) {\r\n        let fontName = event.target.value.trim()\r\n        this.fontName = fontName\r\n        useHead({\r\n          link: [{href: `https://fonts.googleapis.com/css2?family=${fontName}&display=swap`, rel: \"stylesheet\"}],\r\n        })\r\n      },\r\n      onChangePaints() {\r\n        this.paintsEnabled = this.paintsEnabled.trim() == \"1\" ? \"0\" : \"1\"\r\n      },\r\n      onChangeBottom() {\r\n        this.fromBottom = this.fromBottom.trim() == \"1\" ? \"0\" : \"1\"\r\n      },\r\n      onChangeInterpolate() {\r\n        this.interpolateSize = this.interpolateSize.trim() == \"1\" ? \"0\" : \"1\"\r\n      },\r\n      onChangeSmooth() {\r\n        this.SmoothColors = this.SmoothColors.trim() == \"1\" ? \"0\" : \"1\"\r\n      },\r\n      onChangeEventApi() {\r\n        this.eventApi = this.eventApi.trim() == \"1\" ? \"0\" : \"1\"\r\n      },\r\n\r\n      async join() {\r\n        if (this.selectedChannel != \"\" && this.selectedChannel != this.channel) {\r\n          // this.client.part(this.channel)\r\n          this.channel = this.selectedChannel\r\n          await this.create_client()\r\n        }\r\n      },\r\n\r\n      async create_client() {\r\n        this.Emotes = {}\r\n        this.Messages = []\r\n        this.Badges = []\r\n\r\n        if (this.client != null) {\r\n          this.client.disconnect()\r\n        }\r\n        this.channelID = null\r\n        this.client = new Twitch(this.channel)\r\n\r\n        this.client.OnUserId = this.onUserID\r\n        this.client.OnPrivateMessage = async (payload) => {\r\n          payload.BG = 0\r\n          if (this.altBG) {\r\n            payload.BG = this.currBG ? 0 : 1\r\n            this.currBG = !this.currBG\r\n          }\r\n          // payload.tags.color = undefined\r\n          payload.PersonalEmotes = undefined\r\n          if (payload.source.nick in this.PersonalEmotes) {\r\n            payload.PersonalEmotes = this.PersonalEmotes[payload.source.nick]\r\n          }\r\n          this.Messages.push(payload)\r\n        }\r\n        this.client.OnClearChat = async (payload) => {\r\n          this.Messages = this.Messages.filter(item => item.source.nick !== payload.parameters)\r\n        }\r\n        this.client.OnClearMessage = async (payload) => {\r\n          this.Messages = this.Messages.filter(item => item.tags[\"id\"] !== payload.tags[\"target-msg-id\"])\r\n        }\r\n\r\n        let gb = await apis.RetryOnError(apis.getGlobalBadges, [], 3)\r\n        if (this.GlobalBadges[\"subscriber\"]) {\r\n          gb[\"subscriber\"] = this.GlobalBadges[\"subscriber\"]\r\n        }\r\n        this.GlobalBadges = gb\r\n        let bp = await apis.RetryOnError(apis.get7tvBadgesPaints, [], 3)\r\n        this.OtherBadges = bp[0]\r\n        this.Paints = bp[1]\r\n\r\n        if (this.channel != \"\") {\r\n          this.client.connect()\r\n          this.Emotes = Object.assign(this.Emotes, await apis.RetryOnError(apis.get7tvGlobalEmotes, [], 3))\r\n          console.log(\"loaded 7tv global emotes\")\r\n          this.Emotes = Object.assign(this.Emotes, await apis.RetryOnError(apis.getBttvGlobalEmotes, [], 3))\r\n          console.log(\"loaded bttv global emotes\")\r\n\r\n          let ffz_data = await apis.RetryOnError(apis.getFfzEmotes, [this.channel], 3) // this contains emotes, mod badge, vip badge\r\n          this.Emotes = Object.assign(this.Emotes, ffz_data[0])\r\n          console.log(\"loaded ffz channel emotes\")\r\n\r\n          if (ffz_data[1] != undefined) {this.GlobalBadges[\"moderator\"][\"1\"] = ffz_data[1]; this.overridedBadges = true}\r\n          if (ffz_data[2] != undefined) this.GlobalBadges[\"vip\"][\"1\"] = ffz_data[2]\r\n\r\n          this.Emotes = Object.assign(this.Emotes, await apis.RetryOnError(apis.getFfzGlobalEmotes, [], 3))\r\n          console.log(\"loaded ffz global emotes\")\r\n        } else {\r\n          this.Emotes = Object.assign(this.Emotes, await apis.RetryOnError(apis.get7tvGlobalEmotes, [], 3))\r\n          this.Messages.push({\"tags\":{\"badge-info\":null,\"badges\":{\"game-developer\":\"1\"},\"color\":\"#FFFFFF\",\"display-name\":\"rj_st\",\"emotes\":null,\"first-msg\":\"0\",\"id\":\"4e9b10fb-7e80-46b5-9652-efc894188334\",\"mod\":\"0\",\"returning-chatter\":\"0\",\"room-id\":\"22484632\",\"subscriber\":\"0\",\"tmi-sent-ts\":\"1680165804876\",\"turbo\":\"0\",\"user-id\":\"407046453\",\"user-type\":null},\"source\":{\"nick\":\"rj_st\",\"host\":\"rj_st@rj_st.tmi.twitch.tv\"},\"command\":{\"command\":\"PRIVMSG\",\"channel\":\"#forsen\"},\"parameters\":\"ApuApustaja TeaTime\",\"BG\":\"0\"})\r\n          this.Messages.push({\"tags\":{\"badge-info\":null,\"badges\":{\"game-developer\":\"1\"},\"color\":\"#FFFFFF\",\"display-name\":\"rj_st\",\"emotes\":null,\"first-msg\":\"0\",\"id\":\"4e9b10fb-7e80-46b5-9652-efc894188334\",\"mod\":\"0\",\"returning-chatter\":\"0\",\"room-id\":\"22484632\",\"subscriber\":\"0\",\"tmi-sent-ts\":\"1680165804876\",\"turbo\":\"0\",\"user-id\":\"407046453\",\"user-type\":null},\"source\":{\"nick\":\"rj_st\",\"host\":\"rj_st@rj_st.tmi.twitch.tv\"},\"command\":{\"command\":\"PRIVMSG\",\"channel\":\"#forsen\"},\"parameters\":\"ApuApustaja TeaTime\",\"BG\":\"1\"})\r\n          // this.Messages.push({\"tags\":{\"badge-info\":{\"subscriber\":\"33\"},\"badges\":{\"vip\":\"1\",\"subscriber\":\"24\"},\"color\":\"#66CDAA\",\"display-name\":\"Aroldas1\",\"emotes\":null,\"first-msg\":\"0\",\"id\":\"a6e4ccf3-98fe-437a-9318-d87b3591f8a5\",\"mod\":\"0\",\"returning-chatter\":\"0\",\"room-id\":\"48189727\",\"subscriber\":\"1\",\"tmi-sent-ts\":\"1680348603142\",\"turbo\":\"0\",\"user-id\":\"69078167\",\"user-type\":null,\"vip\":\"1\"},\"source\":{\"nick\":\"aroldas1\",\"host\":\"aroldas1@aroldas1.tmi.twitch.tv\"},\"command\":{\"command\":\"PRIVMSG\",\"channel\":\"#t2x2\"},\"parameters\":\"ApuApustaja TeaTime\",\"BG\":\"0\"})\r\n        }\r\n      }, \r\n      async get7tvchannel() {\r\n        let stv = await apis.RetryOnError(apis.get7tvEmotes, [this.channelID], 3)\r\n        if (stv.length > 0) {\r\n          console.log(\"loaded seventv channel\")\r\n          this.Emotes = Object.assign(this.Emotes, stv[0])\r\n\r\n          // initializing event api\r\n          // if (this.useEventAPI) {\r\n          //   this.EventApi = new EventApi(stv[1], this.channelID, this.onEmoteAdd, this.onEmoteRename)\r\n\r\n          //   this.EventApi.onDelete = this.onEmoteDelete\r\n          //   this.EventApi.onAdd = this.onEmoteAdd\r\n          //   this.EventApi.onRename = this.onEmoteRename\r\n\r\n          //   this.EventApi.onPersonalEmotes = this.onPersonalEmotes\r\n\r\n          //   this.EventApi.Connect()\r\n          // }\r\n        }\r\n      },\r\n      async getbttvchannel() {\r\n        this.Emotes = Object.assign(this.Emotes, await apis.RetryOnError(apis.getBttvEmotes, [this.channelID], 3))\r\n      },\r\n      async getsubscriberbadges() {\r\n        let subs = await apis.RetryOnError(apis.getSubscriberBadges, [this.channelID], 3)\r\n        if (subs) {\r\n          this.GlobalBadges[\"subscriber\"] = subs\r\n          console.log(\"loaded sub badges\")\r\n        }\r\n      },\r\n      async onUserID(id) {\r\n          console.log(this.channelID)\r\n          if (this.channelID == null) {\r\n            this.channelID = id\r\n\r\n            // a\r\n            await this.getbttvchannel()\r\n            await this.get7tvchannel()\r\n            await this.getsubscriberbadges()\r\n          }\r\n        }\r\n    },\r\n    computed: {\r\n      out_url() {\r\n        let additional_query = \"\"\r\n        if (this.selectedChannel != \"\") {\r\n          if (this.fontSize != 18) additional_query += `&font_size=${this.fontSize}`\r\n          if (this.BG != \"#2b2b2b\") additional_query += `&background=${this.BG != \"transparent\" ? this.BG.substring(1) : this.BG}`\r\n          if (this.paintsEnabled != \"1\") additional_query += `&paints=0`\r\n          if (this.SmoothColors != \"1\") additional_query += `&smoothcolor=0`\r\n          if (this.Border != \"2\") additional_query += `&border=0`\r\n          if (this.pEmotes != \"1\") additional_query += `&pemotes=0`\r\n          if (this.eventApi != \"1\") additional_query += `&eventapi=0`\r\n          if (this.textShadow != \"0\") additional_query += `&shadowtext=1`\r\n          if (this.fontName != \"Roboto\") additional_query += `&fontname=${this.fontName}`\r\n          if (this.deleteAfter != \"0\") additional_query += `&deleteafter=${this.deleteAfter}`\r\n          if (this.ignoreList != \"\") additional_query += `&ignore=${this.ignoreList.trim()}`\r\n\r\n          return `${location.toString()}chat?channel=${this.selectedChannel}${additional_query}`\r\n        }\r\n        return `No channel!`\r\n      },\r\n    }\r\n}\r\n</script>","<template>\n  <div class=\"ChatMessage\" :bg=\"payload.BG\">\n    <div v-for=\"badge in Badges\" :key=\"badge\" class=\"Badge\">\n        <img :provider=\"badge.provider\" :src=\"badge.Url\">\n    </div>\n    <span>\n      <span :HavePaints=\"HavePaints\" class=\"message-nick\" :style=\"{color: color}\">{{ nick }}: </span>\n      <span class=\"message-text\" :action=\"this.payload.action\" :HavePaints=\"HavePaints\">\n        <template v-for=\"mes in FinalMessage\" :key=\"mes\">\n          <img v-if=\"mes.Type=='emote'\" :src=\"mes.Text\" :ZeroWidth=\"mes.ZeroWidth\">\n          <template v-if=\"mes.Type=='text'\">{{mes.Text}}</template>\n        </template>  \n      </span>\n    </span>\n  </div>\n</template>\n\n<script>\nimport Common from '@/utils/common'\nimport ColourDistance from '@/utils/colour'\n\n// @todo: zero-width emotes\n\nexport default {\nname: 'ChatMessage',\ndata() {\n  return {\n    EmotesBaseUrl: {\n      \"7TV\": \"https://cdn.7tv.app/emote/{0}/2x.webp\",\n      \"BTTV\": \"https://cdn.betterttv.net/emote/{0}/2x\",\n      \"FFZ\": \"https://cdn.frankerfacez.com/emote/{0}/2\",\n      \"TWITCH\": \"\"\n    },\n    Paint: null,\n    HavePaints: false,\n    displayName: \"\",\n\n    dot : 0,\n\n    mes_BG : \"\",\n\n    Badges: [],\n  }\n},\nprops: {\n  Emotes: Object,\n  OtherBadges: Array,\n  GlobalBadges: Object,\n  Paints: Array,\n  font_size: String,\n  shadowText: String,\n  paintsEnabled: String,\n  interpolateSize: String,\n\n  overridedBadges: Boolean,\n\n  padding: String,\n\n  SmoothColors: String,\n\n  defaultColors: Array,\n\n  payload: Object,\n  BG: String,\n  BG2: String,\n\n  border: String,\n},\ncreated: async function() {\n  if (this.payload.command.command != \"PRIVMSG\") {\n          return {}\n      }\n      this.displayName = this.payload.tags[\"display-name\"]\n      if (this.payload.tags[\"display-name\"] == undefined) {\n        this.displayName = this.payload.user\n      }\n\n      // twitch badges\n      if (this.payload.tags.badges) {\n        for (const [key, value] of Object.entries(this.payload.tags[\"badges\"])) {\n          if (this.GlobalBadges[key]) {\n            let provider = \"Twitch\"\n            if (this.overridedBadges && key == \"moderator\") provider = \"ffz-mod-badge\"\n            this.Badges.push({\"Url\": this.GlobalBadges[key][value], \"provider\": provider})\n          }\n        }\n      }\n      // parse extension badges\n      if (this.OtherBadges) {\n        for (const value of this.OtherBadges) {\n          if (value.Users.includes(this.payload.tags[\"user-id\"])) {\n            this.Badges.push({\"Url\": value.Url, \"provider\": value.Type})\n          }\n        }\n      }\n\n      // 7tv paints\n      try {\n        if (this.paintsEnabled == \"1\") {\n        for (const value of this.Paints) {\n          if (value.users.includes(this.payload.tags[\"user-id\"])) {\n            this.HavePaints = true\n            this.Paint = value\n            break\n          }\n        }\n      }\n      } catch (error) {\n        console.log(error)\n      }\n  },\ncomputed: {\n  color() {\n      let mes_BG = this.payload.BG == \"0\" ? this.BG : this.BG2\n\n      let color = this.payload.tags.color\n      if (!this.payload.tags.color) {\n        color = this.defaultColors[Math.floor(Math.random() * this.defaultColors.length)]\n      }\n      // @todo: добавить убавление яркости\n      if (mes_BG != \"transparent\" && this.SmoothColors == \"1\") {\n        // если сообщение сливается с фоном:\n        let userRGB = Common.hexToRgb(color)\n        let backgroundRGB = Common.hexToRgb(mes_BG)\n\n        // схожесть цветов\n        let userXYZ = ColourDistance.rgb2xyz(userRGB[0], userRGB[1], userRGB[2])\n        let backgroundXYZ = ColourDistance.rgb2xyz(backgroundRGB[0], backgroundRGB[1], backgroundRGB[2])\n\n\n        let distance = ColourDistance.deltaE00(userXYZ[0], userXYZ[1], userXYZ[2], backgroundXYZ[0], backgroundXYZ[1], backgroundXYZ[2]) * 10\n        if (distance == 0) {\n          distance = 0.0001\n        }\n        if (distance < 0.3) {\n          // значит фон сливается, теперь мы добавляем/убавляем +40% яркость пользователю\n          let newColor = Common.pSBC(0.25, color)\n          return newColor\n        }\n      }\n      return color\n    },\n  FinalMessage() {\n    let TempMessage = `${this.payload.parameters}`\n\n      // TempMessage = twemoji.parse(TempMessage)\n\n      let f_mes = Common.textToMessageObject(TempMessage)\n\n      if (this.payload.tags.emotes) {\n        let twitchEmotes = Common.parse_smiles(TempMessage, this.payload.tags[\"emotes\"])\n        for (const [em, url] of Object.entries(twitchEmotes)) {\n          for (const i in f_mes) {\n            if (f_mes[i].Text.slice(0, -1) == em) {\n              f_mes[i].Type = \"emote\"\n              f_mes[i].Text = url\n              f_mes[i].ZeroWidth = false\n            }\n          }\n        }\n      }\n      /* eslint-disable no-unused-vars */\n      for (const i in f_mes) {\n        if (this.Emotes[f_mes[i].Text.slice(0, -1)]) {\n          let em = this.Emotes[f_mes[i].Text.slice(0, -1)]\n          f_mes[i].Type = \"emote\"\n          f_mes[i].Text = this.EmotesBaseUrl[em.Type].replace('{0}', em.ID)\n          f_mes[i].ZeroWidth = em.ZeroWidth\n        }\n      }\n\n      return f_mes\n  },\n  nick() {\n    if (this.displayName.toLowerCase() != this.payload.source.nick) return `${this.payload.source.nick} (${this.displayName})`\n    return this.displayName\n  },\n  bgImage() {\n    if (!this.Paint || this.paintsEnabled == \"0\") {\n      return \"\"\n    }\n    const ccsFunc = this.Paint.function\n\n    const args = []\n    switch (this.Paint.function) {\n        case \"linear-gradient\":\n            args.push(`${this.Paint.angle}deg`)\n            break;\n        case \"radial-graient\":\n            args.push(this.Paint.shape ?? \"circle\")\n            break\n        case \"url\":\n            args.push(this.Paint.image_url ?? \"\")\n            break\n    }\n    let funcPrefix = \"\"\n    if (this.Paint.function !== \"URL\") {\n        funcPrefix = this.Paint.repeat ? \"repeating-\" : \"\"\n    }\n    for (const stop of this.Paint.stops) {\n        const color = Common.DecimalToStringRGBA(stop.color)\n        args.push(`${color} ${stop.at * 100}%`)\n    }\n    return `${funcPrefix}${ccsFunc}(${args.join(\", \")})`\n  },\n  filterText() {\n    if (this.shadowText == \"1\") {\n      return \"drop-shadow(-1px 2px 1px #2b2b2b)\"\n    }\n    return \"\"\n  },\n  filter() {\n    try {\n      if (this.paintsEnabled == \"0\") throw \"paints disabled\"\n      return this.Paint.drop_shadows\n      .map((v) => `drop-shadow(${v.x_offset}px ${v.y_offset}px ${v.radius}px ${Common.DecimalToStringRGBA(v.color)})`)\n      .join(\" \");\n    } catch (error) {\n      if (this.shadowText == \"1\") {\n        return \"drop-shadow(-1px 2px 1px #2b2b2b)\"\n      }\n      return \"\"\n    }\n  },\n  paintColor() {\n    if (!this.Paint || this.paintsEnabled == \"0\") {\n      return \"\"\n    }\n    return Common.DecimalToStringRGBA(this.Paint.color)\n  },\n  badgeSize() {\n    if (this.interpolateSize == \"1\" && parseInt(this.font_size)) {\n      return Math.round(0.8 * parseInt(this.font_size) + 4.4).toString() + \"px\"\n    }\n    return \"18px\"\n  },\n  emoteSize() {\n    if (this.interpolateSize == \"1\" && parseInt(this.font_size)) {\n      return (parseInt(this.font_size) + 14).toString() + \"px\"\n    }\n    return \"32px\"\n  },\n  messageSize() {\n    if (this.interpolateSize && parseInt(this.font_size)) {\n      return Math.round(1.33 * parseInt(this.font_size) + 7).toString() + \"px\"\n    }\n    return \"31px\"\n  },\n  Font_Size() {\n      return `${this.font_size}px`\n  },\n  Border() {\n      return `${this.border}px solid black`\n  },\n  Padding() {\n      if (this.padding == \"1\") {\n        return \"3px\"\n      }\n      return \"0px\"\n    }\n}\n}\n</script>\n\n<style>\n  .ChatMessage[bg=\"0\"] {\n    background-color: v-bind(BG);\n  }\n\n  .ChatMessage[bg=\"1\"] {\n    background-color: v-bind(BG2);\n  }\n\n  .Badge {\n    display: inline-block;\n    padding-right: 3px;\n  }\n  .Badge img {\n    width: v-bind(badgeSize);\n    /* vertical-align: middle; */\n  }\n  .Badge img[provider=\"ffz-mod-badge\"] {\n    background-color: #00ad03;\n    border-radius: 2px;\n  }\n  .ChatMessage {\n    padding-top: v-bind(Padding);\n    padding-bottom: v-bind(Padding);\n\n    padding-left: 5px;\n\n    min-height: v-bind(messageSize);\n    font-size: v-bind(Font_Size);\n\n    width: 100%;\n\n    display: inline-block;\n\n    background: v-bind(BG);\n    color: white;\n    border-top: v-bind(Border);\n  }\n  .message-text {\n    bottom: 5px;\n    margin-right: 13px;\n    filter: v-bind('filterText');\n  }\n  .message-text img, .emoji {\n    height: v-bind(emoteSize);\n    vertical-align: middle;\n    filter: unset;\n    padding-right: 8px;\n  }\n  .message-nick {\n    font-weight: 700;\n\n    /* background-size: cover; */\n    filter: v-bind('filter');\n    color: v-bind('paintColor');\n  }\n  .message-nick[HavePaints=\"true\"] {\n    -webkit-text-fill-color: transparent;\n    -webkit-background-clip: text;\n    background-clip: text !important;\n    background-color: currentcolor;\n    background-image: v-bind('bgImage');\n  }\n  .message-text img[ZeroWidth=\"true\"] {\n    position: absolute;\n\t\tz-index: 1;\n\t\ttransform: translateX(-100%);\n  }\n\n  .message-text[action=\"true\"][HavePaints=\"false\"] {\n    color: v-bind('color')\n  }\n\n  .message-text[action=\"true\"][HavePaints=\"true\"] {\n    filter: v-bind('filter');\n    color: v-bind('paintColor');\n    -webkit-text-fill-color: transparent;\n    -webkit-background-clip: text;\n    background-clip: text !important;\n    background-color: currentcolor;\n    background-image: v-bind('bgImage');\n  }\n</style>\n","import { render } from \"./ChatMessage_example.vue?vue&type=template&id=8bb287fe\"\nimport script from \"./ChatMessage_example.vue?vue&type=script&lang=js\"\nexport * from \"./ChatMessage_example.vue?vue&type=script&lang=js\"\n\nimport \"./ChatMessage_example.vue?vue&type=style&index=0&id=8bb287fe&lang=css\"\n\nimport exportComponent from \"S:\\\\golang\\\\eblanchat3.0\\\\eblanchat\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./main.vue?vue&type=template&id=862551be\"\nimport script from \"./main.vue?vue&type=script&lang=js\"\nexport * from \"./main.vue?vue&type=script&lang=js\"\n\nimport \"./main.vue?vue&type=style&index=0&id=862551be&lang=css\"\n\nimport exportComponent from \"S:\\\\golang\\\\eblanchat3.0\\\\eblanchat\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["id","style","class","ref","_createElementVNode","href","target","value","_hoisted_12","_hoisted_13","_createElementBlock","_Fragment","_renderList","$data","mes","_createBlock","_component_ChatMessage","key","tags","Emotes","Paints","GlobalBadges","payload","BG","BG2","paintsEnabled","font_size","interpolateSize","OtherBadges","defaultColors","SmoothColors","border","shadowText","padding","overridedBadges","_hoisted_4","_createVNode","_component_center","_hoisted_7","type","onInput","$options","onClick","_hoisted_9","_hoisted_11","onChange","_hoisted_17","min","max","_hoisted_20","onclick","_hoisted_23","_hoisted_26","_hoisted_29","_hoisted_32","checked","_hoisted_35","_hoisted_38","$event","_hoisted_41","_hoisted_44","_hoisted_47","_hoisted_50","_hoisted_54","readonly","bg","$props","badge","provider","src","Url","HavePaints","color","_hoisted_3","action","Type","Text","ZeroWidth","__default__","name","data","EmotesBaseUrl","Paint","displayName","dot","mes_BG","Badges","props","Object","Array","String","Boolean","created","async","this","command","undefined","user","badges","entries","push","Users","includes","users","error","console","log","computed","Math","floor","random","length","userRGB","Common","backgroundRGB","userXYZ","ColourDistance","backgroundXYZ","distance","newColor","FinalMessage","TempMessage","parameters","f_mes","emotes","twitchEmotes","em","url","i","slice","replace","ID","nick","toLowerCase","source","bgImage","ccsFunc","function","args","angle","shape","image_url","funcPrefix","repeat","stop","stops","at","join","filterText","filter","drop_shadows","map","v","x_offset","y_offset","radius","paintColor","badgeSize","parseInt","round","toString","emoteSize","messageSize","Font_Size","Border","Padding","__exports__","components","ChatMessage","fontSize","pEmotes","eventApi","textShadow","deleteAfter","fromBottom","ignoreList","fontName","altBG","PersonalEmotes","Messages","currBG","channel","selectedChannel","client","evenapi","updated","$refs","chat","scrollTo","scrollHeight","shift","minus","gray","create_client","methods","changeStyle","event","trim","onChangeChannel","onChangeIgnore","onChangeFontSize","onChangepEmotes","onChangePadding","onChangeShadow","onChangeBorder","onChangeBG","newBG","substring","e","onChangeFade","parsed","isNaN","onChangeFont","useHead","link","rel","onChangePaints","onChangeBottom","onChangeInterpolate","onChangeSmooth","onChangeEventApi","disconnect","channelID","Twitch","OnUserId","onUserID","OnPrivateMessage","OnClearChat","item","OnClearMessage","gb","apis","bp","connect","assign","ffz_data","stv","subs","getbttvchannel","get7tvchannel","getsubscriberbadges","out_url","additional_query","location","render"],"sourceRoot":""}