{"version":3,"file":"js/449.6487d116.js","mappings":"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","sources":["webpack://chat/./src/views/main.vue","webpack://chat/./src/components/ChatMessage_example.vue","webpack://chat/./src/components/ChatMessage_example.vue?cf30","webpack://chat/./src/views/main.vue?544f"],"sourcesContent":["<style>\r\n  #main {\r\n    width: 100%;\r\n    height: 100%;\r\n\r\n    font-family: 'Roboto', sans-serif;\r\n\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n\r\n    overflow: auto;\r\n    \r\n    background: rgb(46, 46, 46);\r\n    color: white;\r\n  }\r\n\r\n  button {\r\n    width: 5vw;\r\n    font-size: 3vh;\r\n    border: 1px solid black;\r\n    background-color: #494949;\r\n    color: white;\r\n    border-radius: 8px;\r\n    margin-left: 0.5vw;\r\n  }\r\n\r\n  .out_url {\r\n    width: 30vw;\r\n  }\r\n  #out {\r\n    margin-left: 25vw;\r\n    margin-top: 20vh;\r\n  }\r\n\r\n  .setting-bottom {\r\n    width: 10vw;\r\n    display: inline-block;\r\n    margin-left: 12vw;\r\n    padding-top: 10vh;\r\n  }\r\n  input {\r\n      width: 14svw;\r\n      height: 4vh;\r\n      background-color: #494949;\r\n      color: white;\r\n      border: 1px solid black;\r\n      border-radius: 8px;\r\n      font-size: 3vh;\r\n      text-align: center;\r\n  }\r\n\r\n  .setting {\r\n    display: inline-block;\r\n    margin-left: 5vw;\r\n    margin-top: 5vh;\r\n    text-align: center;\r\n  }\r\n\r\n  .checkbox {\r\n    width: 3vw;\r\n    height: 3vh;\r\n  }\r\n\r\n  .chat {\r\n    width: 25%;\r\n    height: 100%;\r\n    position: fixed;\r\n\r\n    bottom: 0;\r\n\r\n    overflow: hidden;\r\n\r\n    user-select: none;\r\n\r\n  }\r\n\r\n  .author {\r\n    /* min-width: 600px; */\r\n\r\n    border-left: 4px solid black;\r\n\r\n    width: 75%;\r\n    height: 10%;\r\n    position: fixed;\r\n    bottom: 0;\r\n    left: 25%;\r\n\r\n    font-size: 1.5vh;\r\n  }\r\n  .author-name {\r\n    text-align: center;\r\n    vertical-align:middle;\r\n    padding-top: 4vh;\r\n  }\r\n\r\n  .settings {\r\n    border-left: 4px solid black;\r\n\r\n    width: 75%;\r\n    height: 90%;\r\n    position: fixed;\r\n    bottom: 10%;\r\n    left: 25%;\r\n\r\n    overflow: auto;\r\n  }\r\n\r\n  a {\r\n    color: white;\r\n  }\r\n\r\n  .debug-description {\r\n    text-align: center;\r\n    vertical-align:middle;\r\n    padding-top: 6vh;\r\n    font-size: 30px;\r\n  }\r\n\r\n  .mes {\r\n    width: 100%;\r\n  }\r\n\r\n  .github-page {\r\n    text-align: right;\r\n    padding-top: 2vh;\r\n    padding-right: 2vw;\r\n  }\r\n</style>\r\n\r\n<template>\r\n<div id=\"main\">\r\n\r\n    <div style=\"background-color: rgb(64 64 64);\" class=\"chat\" ref=\"chat\">\r\n          <ChatMessage class=\"mes\" v-for=\"mes in Messages\" :key=\"mes\"\r\n          :Emotes=\"Emotes\" :Paints=\"Paints\" :GlobalBadges=\"GlobalBadges\"\r\n          :payload=\"mes\" :BG=\"BG\" :BG2=\"BG2\" :paintsEnabled=\"paintsEnabled\" \r\n          :font_size=\"fontSize\" :interpolateSize=\"interpolateSize\"\r\n          :OtherBadges=\"OtherBadges\" :defaultColors=\"defaultColors\"\r\n          :SmoothColors=\"SmoothColors\" :border=\"Border\"/>\r\n    </div>\r\n\r\n    <div style=\"background-color: #3a3a3a;\" class=\"author\">\r\n\r\n      <div class=\"author-name\">\r\n        Made by JustRirill (rj_st) <br>\r\n        Github link <a href=\"https://github.com/justririll/JstChat\" target=\"_blank\">here</a>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"settings\" id=\"\">\r\n      <div class=\"setting\">\r\n        <div class=\"setting-name\">Channel name</div>\r\n        <input type=\"text\" :value=\"selectedChannel\" v-on:input=\"onChangeChannel\">\r\n      </div>\r\n      <button :onClick=\"join\">Join</button>\r\n\r\n      <div class=\"setting\">\r\n        <div class=\"setting-name\">Font size</div>\r\n        <input type=\"number\" :value=\"fontSize\" max=\"50\" v-on:input=\"onChangeFontSize\">\r\n      </div>\r\n\r\n      <div class=\"setting\">\r\n        <div class=\"setting-name\">Background color <br> (in hex; transparent for transparency)</div>\r\n        <input onclick=\"this.select();\" type=\"text\" :value=\"BG\" v-on:input=\"onChangeBG\">\r\n      </div>\r\n\r\n      <div class=\"setting\">\r\n        <div class=\"setting-name\">7TV paints</div>\r\n        <input class=\"checkbox\" type=\"checkbox\" :value=\"paintsEnabled\" v-on:input=\"onChangePaints\" checked>\r\n      </div>\r\n\r\n      <div class=\"setting\">\r\n        <div class=\"setting-name\">Make some colors readable <br> (only if background not transparent)</div>\r\n        <input class=\"checkbox\" type=\"checkbox\" :value=\"SmoothColors\" v-on:input=\"onChangeSmooth\" checked>\r\n      </div>\r\n\r\n      <div class=\"setting\">\r\n        <div class=\"setting-name\">Border</div>\r\n        <input class=\"checkbox\" type=\"checkbox\" :value=\"Border\" v-on:input=\"onChangeBorder\" checked>\r\n      </div>\r\n\r\n      <br>\r\n      <br>\r\n\r\n      <div class=\"setting\" id=\"out\">\r\n        <div class=\"setting-name\">Your URL:</div>\r\n        <input onclick=\"this.select();\" class=\"out_url\" type=\"text\" :value=\"out_url\" readonly>\r\n      </div>\r\n\r\n    </div>\r\n    \r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport ChatMessage from '@/components/ChatMessage_example.vue'\r\nimport Common from '@/methods/common'\r\nimport Twitch from '@/methods/twitch.js'\r\nimport apis from '@/methods/tpd.js'\r\n\r\nexport default {\r\n    name: 'main-page',\r\n    components: {\r\n      ChatMessage\r\n    },\r\n    data() {\r\n      return {\r\n        paintsEnabled: \"1\",\r\n        fontSize: \"24\",\r\n        interpolateSize: \"1\",\r\n        SmoothColors: \"1\",\r\n        Border: \"2\",\r\n        \r\n        altBG: true,\r\n        BG: \"#2b2b2b\",\r\n        BG2: \"\",\r\n\r\n        PersonalEmotes: {},\r\n\r\n        GlobalBadges: [],\r\n        OtherBadges: [],\r\n        Messages: [],\r\n        Emotes: [],\r\n        Badges: {},\r\n        Paints: [],\r\n\r\n        //\r\n        currBG: true,\r\n\r\n        channel: \"\", // this is channel for websocket\r\n        selectedChannel: \"\", // this is channel from input, for url generating\r\n\r\n        client: null,\r\n        evenapi: null,\r\n\r\n        defaultColors: [\"#4242f7\", \"#ff7f50\", \"#1e90ff\", \"#00ff7f\", \"#9acd32\", \"#008000\", \"#ff4500\", \"#ff0000\", \"#daa520\", \"#ff69b4\", \"#5f9ea0\", \"#2e8b57\", \"#d2691e\", \"#a065d7\", \"#b22222\"],\r\n      }\r\n    },\r\n    updated() {\r\n      this.$refs.chat.scrollTo(0,this.$refs.chat.scrollHeight);\r\n      if (this.Messages.length > 25) {\r\n        this.Messages.shift()\r\n      }\r\n    },\r\n    created: async function() {\r\n      // this we need to put in bg setting update\r\n      if (this.BG != \"#2b2b2b\" && this.BG != \"transparent\") {\r\n          this.BG = \"#\" + this.BG\r\n        }\r\n\r\n      // alt bg creation:\r\n      if (this.altBG && this.BG != \"transparent\") {\r\n        let minus = 1\r\n        let gray = Common.toGray(this.BG) \r\n        if (gray > 0.38) {\r\n          minus = -30/gray\r\n        }\r\n        this.BG2 = Common.pSBC(0.01*minus, this.BG)\r\n      } else if (this.BG == \"transparent\") {\r\n        this.BG2 = \"transparent\"\r\n      }\r\n\r\n      await this.create_client()\r\n    },\r\n    methods: {\r\n      onChangeChannel(event) {\r\n        this.selectedChannel = event.target.value.trim().toLowerCase()\r\n      },\r\n      onChangeFontSize(event) {\r\n        let i = parseInt(event.target.value.trim())\r\n        if (i > 0 && i <= 50) this.fontSize = event.target.value.trim()\r\n      },\r\n      onChangeBorder() {\r\n        this.Border = this.Border.trim() == \"2\" ? \"0\" : \"2\"\r\n      },\r\n      onChangeBG(event) {\r\n        let newBG =event.target.value.trim()\r\n        if (newBG == \"transparent\" || newBG == \"none\") {\r\n          this.BG = \"transparent\"\r\n          this.BG2 = \"transparent\"\r\n        } else if (newBG.length == 7 && newBG.substring(0, 1) == \"#\") {\r\n          try {\r\n            this.BG = newBG\r\n            let minus = 1\r\n            let gray = Common.toGray(this.BG)\r\n            if (gray > 0.38) {\r\n              minus = -30/gray\r\n            }\r\n            this.BG2 = Common.pSBC(0.01*minus, this.BG)\r\n          } catch(e) {\r\n            // pass\r\n          }\r\n        }\r\n      },\r\n      onChangePaints() {\r\n        this.paintsEnabled = this.paintsEnabled.trim() == \"1\" ? \"0\" : \"1\"\r\n      },\r\n      onChangeInterpolate() {\r\n        this.interpolateSize = this.interpolateSize.trim() == \"1\" ? \"0\" : \"1\"\r\n      },\r\n      onChangeSmooth() {\r\n        this.SmoothColors = this.SmoothColors.trim() == \"1\" ? \"0\" : \"1\"\r\n      },\r\n\r\n      async join() {\r\n        if (this.selectedChannel != \"\" && this.selectedChannel != this.channel) {\r\n          // this.client.part(this.channel)\r\n          this.channel = this.selectedChannel\r\n          await this.create_client()\r\n        }\r\n      },\r\n\r\n      async create_client() {\r\n        this.Emotes = []\r\n        this.Messages = []\r\n        this.Badges = []\r\n\r\n        if (this.client != null) {\r\n          this.client.disconnect()\r\n        }\r\n        this.client = new Twitch(this.channel)\r\n\r\n        this.client.OnUserId = this.onUserID\r\n        this.client.OnPrivateMessage = async (payload) => {\r\n          payload.BG = 0\r\n          if (this.altBG) {\r\n            payload.BG = this.currBG ? 0 : 1\r\n            this.currBG = !this.currBG\r\n          }\r\n          // payload.tags.color = undefined\r\n          payload.PersonalEmotes = undefined\r\n          if (payload.source.nick in this.PersonalEmotes) {\r\n            payload.PersonalEmotes = this.PersonalEmotes[payload.source.nick]\r\n          }\r\n          this.Messages.push(payload)\r\n        }\r\n        this.client.OnClearChat = async (payload) => {\r\n          this.Messages = this.Messages.filter(item => item.source.nick !== payload.parameters)\r\n        }\r\n        this.client.OnClearMessage = async (payload) => {\r\n          this.Messages = this.Messages.filter(item => item.tags[\"id\"] !== payload.tags[\"target-msg-id\"])\r\n        }\r\n\r\n        let gb = await apis.RetryOnError(apis.getGlobalBadges, [], 3)\r\n        if (this.GlobalBadges[\"subscriber\"]) {\r\n          gb[\"subscriber\"] = this.GlobalBadges[\"subscriber\"]\r\n        }\r\n        this.GlobalBadges = gb\r\n        let bp = await apis.RetryOnError(apis.get7tvBadgesPaints, [], 3)\r\n        this.OtherBadges = bp[0]\r\n        this.Paints = bp[1]\r\n\r\n        if (this.channel != \"\") {\r\n          this.client.connect()\r\n          this.Emotes = this.Emotes.concat(await apis.RetryOnError(apis.get7tvGlobalEmotes, [], 3))\r\n          console.log(\"loaded 7tv global emotes\")\r\n          this.Emotes = this.Emotes.concat(await apis.RetryOnError(apis.getBttvGlobalEmotes, [], 3))\r\n          console.log(\"loaded bttv global emotes\")\r\n          this.Emotes = this.Emotes.concat(await apis.RetryOnError(apis.getFfzEmotes, [this.channel], 3))\r\n          console.log(\"loaded ffz channel emotes\")\r\n          this.Emotes = this.Emotes.concat(await apis.RetryOnError(apis.getFfzGlobalEmotes, [], 3))\r\n          console.log(\"loaded ffz global emotes\")\r\n        } else {\r\n          this.Emotes = this.Emotes.concat(await apis.RetryOnError(apis.get7tvGlobalEmotes, [], 3))\r\n          this.Messages.push({\"tags\":{\"badge-info\":null,\"badges\":{\"game-developer\":\"1\"},\"color\":\"#FFFFFF\",\"display-name\":\"rj_st\",\"emotes\":null,\"first-msg\":\"0\",\"id\":\"4e9b10fb-7e80-46b5-9652-efc894188334\",\"mod\":\"0\",\"returning-chatter\":\"0\",\"room-id\":\"22484632\",\"subscriber\":\"0\",\"tmi-sent-ts\":\"1680165804876\",\"turbo\":\"0\",\"user-id\":\"407046453\",\"user-type\":null},\"source\":{\"nick\":\"rj_st\",\"host\":\"rj_st@rj_st.tmi.twitch.tv\"},\"command\":{\"command\":\"PRIVMSG\",\"channel\":\"#forsen\"},\"parameters\":\"ApuApustaja TeaTime\",\"BG\":\"0\"})\r\n          this.Messages.push({\"tags\":{\"badge-info\":null,\"badges\":{\"game-developer\":\"1\"},\"color\":\"#FFFFFF\",\"display-name\":\"rj_st\",\"emotes\":null,\"first-msg\":\"0\",\"id\":\"4e9b10fb-7e80-46b5-9652-efc894188334\",\"mod\":\"0\",\"returning-chatter\":\"0\",\"room-id\":\"22484632\",\"subscriber\":\"0\",\"tmi-sent-ts\":\"1680165804876\",\"turbo\":\"0\",\"user-id\":\"407046453\",\"user-type\":null},\"source\":{\"nick\":\"rj_st\",\"host\":\"rj_st@rj_st.tmi.twitch.tv\"},\"command\":{\"command\":\"PRIVMSG\",\"channel\":\"#forsen\"},\"parameters\":\"ApuApustaja TeaTime\",\"BG\":\"1\"})\r\n          // this.Messages.push({\"tags\":{\"badge-info\":{\"subscriber\":\"33\"},\"badges\":{\"vip\":\"1\",\"subscriber\":\"24\"},\"color\":\"#66CDAA\",\"display-name\":\"Aroldas1\",\"emotes\":null,\"first-msg\":\"0\",\"id\":\"a6e4ccf3-98fe-437a-9318-d87b3591f8a5\",\"mod\":\"0\",\"returning-chatter\":\"0\",\"room-id\":\"48189727\",\"subscriber\":\"1\",\"tmi-sent-ts\":\"1680348603142\",\"turbo\":\"0\",\"user-id\":\"69078167\",\"user-type\":null,\"vip\":\"1\"},\"source\":{\"nick\":\"aroldas1\",\"host\":\"aroldas1@aroldas1.tmi.twitch.tv\"},\"command\":{\"command\":\"PRIVMSG\",\"channel\":\"#t2x2\"},\"parameters\":\"ApuApustaja TeaTime\",\"BG\":\"0\"})\r\n        }\r\n      }, \r\n      async get7tvchannel() {\r\n        let stv = await apis.RetryOnError(apis.get7tvEmotes, [this.channelID], 3)\r\n        if (stv.length > 0) {\r\n          console.log(\"loaded seventv channel\")\r\n          this.Emotes = this.Emotes.concat(stv[0])\r\n\r\n          // initializing event api\r\n          // if (this.useEventAPI) {\r\n          //   this.EventApi = new EventApi(stv[1], this.channelID, this.onEmoteAdd, this.onEmoteRename)\r\n\r\n          //   this.EventApi.onDelete = this.onEmoteDelete\r\n          //   this.EventApi.onAdd = this.onEmoteAdd\r\n          //   this.EventApi.onRename = this.onEmoteRename\r\n\r\n          //   this.EventApi.onPersonalEmotes = this.onPersonalEmotes\r\n\r\n          //   this.EventApi.Connect()\r\n          // }\r\n        }\r\n      },\r\n      async getbttvchannel() {\r\n        this.Emotes = this.Emotes.concat(await await apis.RetryOnError(apis.getBttvEmotes, [this.channelID], 3))\r\n      },\r\n      async getsubscriberbadges() {\r\n        let subs = await apis.RetryOnError(apis.getSubscriberBadges, [this.channelID], 3)\r\n        if (subs) {\r\n          this.GlobalBadges[\"subscriber\"] = subs\r\n          console.log(\"loaded sub badges\")\r\n        }\r\n      },\r\n      async onUserID(id) {\r\n          console.log(this.channelID)\r\n          if (this.channelID == null) {\r\n            this.channelID = id\r\n\r\n            // a\r\n            await this.getbttvchannel()\r\n            await this.get7tvchannel()\r\n            await this.getsubscriberbadges()\r\n          }\r\n        }\r\n    },\r\n    computed: {\r\n      out_url() {\r\n        let additional_query = \"\"\r\n        if (this.selectedChannel != \"\") {\r\n          if (this.fontSize != 18) additional_query += `&font_size=${this.fontSize}`\r\n          if (this.BG != \"#2b2b2b\") additional_query += `&background=${this.BG != \"transparent\" ? this.BG.substring(1) : this.BG}`\r\n          if (this.paintsEnabled != \"1\") additional_query += `&paints=0`\r\n          if (this.SmoothColors != \"1\") additional_query += `&smoothcolor=0`\r\n          if (this.Border != \"2\") additional_query += `&border=0`\r\n          return `${location.toString()}chat?channel=${this.selectedChannel}${additional_query}`\r\n        }\r\n        return `No channel!`\r\n      },\r\n    }\r\n}\r\n</script>","<template>\n  <div class=\"ChatMessage\" :bg=\"payload.BG\">\n    <div v-for=\"badge in Badges\" :key=\"badge\" class=\"Badge\">\n        <img :src=\"badge.Url\">\n    </div>\n    <span>\n      <span :HavePaints=\"HavePaints\" v-if=\"displayName.toLowerCase() == this.payload.source.nick\" class=\"message-nick\" :style=\"{color: color, backgroundImage: bgImage}\">{{ displayName }}: </span>\n      <span :HavePaints=\"HavePaints\" v-if=\"displayName.toLowerCase() != this.payload.source.nick\" class=\"message-nick\" :style=\"{color: color, backgroundImage: bgImage}\">{{this.payload.source.nick}} ({{ displayName }}): </span>\n      <span class=\"message-text\">\n        <template v-for=\"mes in FinalMessage\" :key=\"mes\">\n          <img v-if=\"mes.Type=='emote'\" :src=\"mes.Text\" :ZeroWidth=\"mes.ZeroWidth\">\n          <template v-if=\"mes.Type=='text'\">{{mes.Text}}</template>\n        </template>  \n      </span>\n    </span>\n  </div>\n</template>\n\n<script>\nimport Common from '@/methods/common'\nimport ColourDistance from '@/methods/colour'\n\n// @todo: zero-width emotes\n\nexport default {\nname: 'ChatMessage',\ndata() {\n  return {\n    EmotesBaseUrl: {\n      \"7TV\": \"https://cdn.7tv.app/emote/{0}/2x.webp\",\n      \"BTTV\": \"https://cdn.betterttv.net/emote/{0}/2x\",\n      \"FFZ\": \"https://cdn.frankerfacez.com/emote/{0}/2\",\n      \"TWITCH\": \"\"\n    },\n    Paint: null,\n    HavePaints: false,\n    displayName: \"\",\n\n    dot : 0,\n\n    mes_BG : \"\",\n\n    Badges: [],\n  }\n},\nprops: {\n  Emotes: Array,\n  OtherBadges: Array,\n  GlobalBadges: Object,\n  Paints: Array,\n  font_size: String,\n  shadowText: String,\n  paintsEnabled: String,\n  interpolateSize: String,\n\n  SmoothColors: String,\n\n  defaultColors: Array,\n\n  payload: Object,\n  BG: String,\n  BG2: String,\n\n  border: String,\n},\ncreated: async function() {\n  if (this.payload.command.command != \"PRIVMSG\") {\n          return {}\n      }\n      this.displayName = this.payload.tags[\"display-name\"]\n      if (this.payload.tags[\"display-name\"] == undefined) {\n        this.displayName = this.payload.user\n      }\n\n      // twitch badges\n      if (this.payload.tags.badges) {\n        for (const [key, value] of Object.entries(this.payload.tags[\"badges\"])) {\n          if (this.GlobalBadges[key]) {\n            this.Badges.push({\"Url\": this.GlobalBadges[key][value]})\n          }\n        }\n      }\n      // parse extension badges\n      if (this.OtherBadges) {\n        for (const value of this.OtherBadges) {\n          if (value.Users.includes(this.payload.tags[\"user-id\"])) {\n            this.Badges.push({\"Url\": value.Url})\n          }\n        }\n      }\n\n      // 7tv paints\n      if (this.paintsEnabled == \"1\") {\n        for (const value of this.Paints) {\n          if (value.users.includes(this.payload.tags[\"user-id\"])) {\n            this.HavePaints = true\n            this.Paint = value\n            break\n          }\n        }\n      }\n  },\ncomputed: {\n  color() {\n      let mes_BG = this.payload.BG == \"0\" ? this.BG : this.BG2\n\n      let color = this.payload.tags.color\n      if (!this.payload.tags.color) {\n        color = this.defaultColors[Math.floor(Math.random() * this.defaultColors.length)]\n      }\n      // @todo: добавить убавление яркости\n      if (mes_BG != \"transparent\" && this.SmoothColors == \"1\") {\n        // если сообщение сливается с фоном:\n        let userRGB = Common.hexToRgb(color)\n        let backgroundRGB = Common.hexToRgb(mes_BG)\n\n        // схожесть цветов\n        let userXYZ = ColourDistance.rgb2xyz(userRGB[0], userRGB[1], userRGB[2])\n        let backgroundXYZ = ColourDistance.rgb2xyz(backgroundRGB[0], backgroundRGB[1], backgroundRGB[2])\n\n\n        let distance = ColourDistance.deltaE00(userXYZ[0], userXYZ[1], userXYZ[2], backgroundXYZ[0], backgroundXYZ[1], backgroundXYZ[2]) * 10\n        if (distance == 0) {\n          distance = 0.0001\n        }\n        if (distance < 0.3) {\n          // значит фон сливается, теперь мы добавляем/убавляем +40% яркость пользователю\n          let newColor = Common.pSBC(0.25, color)\n          return newColor\n        }\n      }\n      return color\n    },\n  FinalMessage() {\n    let TempMessage = `${this.payload.parameters}`\n\n    // TempMessage = twemoji.parse(TempMessage)\n\n    let f_mes = Common.textToMessageObject(TempMessage)\n\n    if (this.payload.tags.emotes) {\n      let twitchEmotes = Common.parse_smiles(TempMessage, this.payload.tags[\"emotes\"])\n      for (const [em, url] of Object.entries(twitchEmotes)) {\n        for (const i in f_mes) {\n          if (f_mes[i].Text.slice(0, -1) == em) {\n            f_mes[i].Type = \"emote\"\n            f_mes[i].Text = url\n            f_mes[i].ZeroWidth = false\n          }\n        }\n      }\n    }\n\n    for (const em of this.Emotes) {\n      for (const i in f_mes) {\n        if (f_mes[i].Text.slice(0, -1) == em.Name) {\n          f_mes[i].Type = \"emote\"\n          f_mes[i].Text = this.EmotesBaseUrl[em.Type].replace('{0}', em.ID)\n          f_mes[i].ZeroWidth = em.ZeroWidth\n        }\n      }\n    }\n\n    if (this.payload.PersonalEmotes !== undefined) {\n      for (const em of this.payload.PersonalEmotes) {\n        for (const i in f_mes) {\n          if (f_mes[i].Text.slice(0, -1) == em.Name) {\n            f_mes[i].Type = \"emote\"\n            f_mes[i].Text = this.EmotesBaseUrl[em.Type].replace('{0}', em.ID)\n            f_mes[i].ZeroWidth = em.ZeroWidth\n          }\n        }\n      }\n    }\n\n    return f_mes\n  },\n  bgImage() {\n    if (!this.Paint || this.paintsEnabled == \"0\") {\n      return \"\"\n    }\n    const ccsFunc = this.Paint.function\n\n    const args = []\n    switch (this.Paint.function) {\n        case \"linear-gradient\":\n            args.push(`${this.Paint.angle}deg`)\n            break;\n        case \"radial-graient\":\n            args.push(this.Paint.shape ?? \"circle\")\n            break\n        case \"url\":\n            args.push(this.Paint.image_url ?? \"\")\n            break\n    }\n    let funcPrefix = \"\"\n    if (this.Paint.function !== \"URL\") {\n        funcPrefix = this.Paint.repeat ? \"repeating-\" : \"\"\n    }\n    for (const stop of this.Paint.stops) {\n        const color = Common.DecimalToStringRGBA(stop.color)\n        args.push(`${color} ${stop.at * 100}%`)\n    }\n    return `${funcPrefix}${ccsFunc}(${args.join(\", \")})`\n  },\n  filterText() {\n    if (this.shadowText == \"1\") {\n      return \"drop-shadow(-1px 2px 1px #2b2b2b)\"\n    }\n    return \"\"\n  },\n  filter() {\n    try {\n      if (this.paintsEnabled == \"0\") throw \"paints disabled\"\n      return this.Paint.drop_shadows\n      .map((v) => `drop-shadow(${v.x_offset}px ${v.y_offset}px ${v.radius}px ${Common.DecimalToStringRGBA(v.color)})`)\n      .join(\" \");\n    } catch (error) {\n      if (this.shadowText == \"1\") {\n        return \"drop-shadow(-1px 2px 1px #2b2b2b)\"\n      }\n      return \"\"\n    }\n  },\n  paintColor() {\n    if (!this.Paint || this.paintsEnabled == \"0\") {\n      return \"\"\n    }\n    return Common.DecimalToStringRGBA(this.Paint.color)\n  },\n  badgeSize() {\n    if (this.interpolateSize == \"1\" && parseInt(this.font_size)) {\n      return Math.round(0.8 * parseInt(this.font_size) + 4.4).toString() + \"px\"\n    }\n    return \"18px\"\n  },\n  emoteSize() {\n    if (this.interpolateSize == \"1\" && parseInt(this.font_size)) {\n      return (parseInt(this.font_size) + 14).toString() + \"px\"\n    }\n    return \"32px\"\n  },\n  messageSize() {\n    if (this.interpolateSize && parseInt(this.font_size)) {\n      return Math.round(1.33 * parseInt(this.font_size) + 7).toString() + \"px\"\n    }\n    return \"31px\"\n  },\n  Font_Size() {\n      return `${this.font_size}px`\n  },\n  Border() {\n      return `${this.border}px solid black`\n  }\n}\n}\n</script>\n\n<style>\n  .ChatMessage[bg=\"0\"] {\n    background-color: v-bind(BG);\n  }\n\n  .ChatMessage[bg=\"1\"] {\n    background-color: v-bind(BG2);\n  }\n\n  .Badge {\n    display: inline-block;\n    padding-right: 3px;\n  }\n  .Badge img {\n    width: v-bind(badgeSize);\n    /* vertical-align: middle; */\n  }\n  .ChatMessage {\n    padding-top: 3px;\n    padding-bottom: 3px;\n    padding-left: 5px;\n\n    min-height: v-bind(messageSize);\n    font-size: v-bind(Font_Size);\n\n    width: 100%;\n\n    display: inline-block;\n\n    background: v-bind(BG);\n    color: white;\n    border-top: v-bind(Border);\n  }\n  .message-text {\n    bottom: 5px;\n  }\n  .message-text img, .emoji {\n    height: v-bind(emoteSize);\n    vertical-align: middle;\n    filter: unset;\n    padding-right: 8px;\n  }\n  .message-nick {\n    font-weight: 700;\n\n    /* background-size: cover; */\n    filter: v-bind('filter');\n    color: v-bind('paintColor');\n  }\n  .message-nick[HavePaints=\"true\"] {\n    -webkit-text-fill-color: transparent;\n    -webkit-background-clip: text;\n    background-clip: text !important;\n    background-color: currentcolor;\n  }\n  .message-text img[ZeroWidth=\"true\"] {\n    position: absolute;\n\t\tz-index: 1;\n\t\ttransform: translateX(-100%);\n  }\n</style>\n","import { render } from \"./ChatMessage_example.vue?vue&type=template&id=07e30949\"\nimport script from \"./ChatMessage_example.vue?vue&type=script&lang=js\"\nexport * from \"./ChatMessage_example.vue?vue&type=script&lang=js\"\n\nimport \"./ChatMessage_example.vue?vue&type=style&index=0&id=07e30949&lang=css\"\n\nimport exportComponent from \"S:\\\\golang\\\\eblanchat3.0\\\\eblanchat\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./main.vue?vue&type=template&id=258dd262\"\nimport script from \"./main.vue?vue&type=script&lang=js\"\nexport * from \"./main.vue?vue&type=script&lang=js\"\n\nimport \"./main.vue?vue&type=style&index=0&id=258dd262&lang=css\"\n\nimport exportComponent from \"S:\\\\golang\\\\eblanchat3.0\\\\eblanchat\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["id","style","class","ref","_createElementVNode","href","target","_createElementBlock","_Fragment","_renderList","$data","mes","_createBlock","_component_ChatMessage","key","Emotes","Paints","GlobalBadges","payload","BG","BG2","paintsEnabled","font_size","interpolateSize","OtherBadges","defaultColors","SmoothColors","border","_hoisted_3","_hoisted_6","type","value","onInput","$options","onClick","_hoisted_8","_hoisted_10","max","_hoisted_13","onclick","_hoisted_16","checked","_hoisted_19","_hoisted_22","_hoisted_24","_hoisted_25","_hoisted_27","readonly","bg","$props","badge","src","Url","toLowerCase","source","nick","HavePaints","color","backgroundImage","_toDisplayString","_hoisted_4","Type","Text","ZeroWidth","__default__","name","data","EmotesBaseUrl","Paint","displayName","dot","mes_BG","Badges","props","Array","Object","String","shadowText","created","async","this","command","tags","undefined","user","badges","entries","push","Users","includes","users","computed","Math","floor","random","length","userRGB","Common","backgroundRGB","userXYZ","ColourDistance","backgroundXYZ","distance","newColor","FinalMessage","TempMessage","parameters","f_mes","emotes","twitchEmotes","em","url","i","slice","Name","replace","ID","PersonalEmotes","bgImage","ccsFunc","function","args","angle","shape","image_url","funcPrefix","repeat","stop","stops","at","join","filterText","filter","drop_shadows","map","v","x_offset","y_offset","radius","error","paintColor","badgeSize","parseInt","round","toString","emoteSize","messageSize","Font_Size","Border","__exports__","components","ChatMessage","fontSize","altBG","Messages","currBG","channel","selectedChannel","client","evenapi","updated","$refs","chat","scrollTo","scrollHeight","shift","minus","gray","create_client","methods","onChangeChannel","event","trim","onChangeFontSize","onChangeBorder","onChangeBG","newBG","substring","e","onChangePaints","onChangeInterpolate","onChangeSmooth","disconnect","Twitch","OnUserId","onUserID","OnPrivateMessage","OnClearChat","item","OnClearMessage","gb","apis","bp","connect","concat","console","log","stv","channelID","subs","getbttvchannel","get7tvchannel","getsubscriberbadges","out_url","additional_query","location","render"],"sourceRoot":""}